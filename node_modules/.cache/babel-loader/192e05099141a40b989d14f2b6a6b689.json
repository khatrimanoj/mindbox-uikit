{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Dropdown/dropdownsearch/dropdownsearch.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass dropdownsearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkType = value => {\n      this.setState({\n        typeDropdown: value\n      });\n    };\n\n    this.showDropdown = () => {\n      this.setState({\n        isOpen: true\n      });\n      document.addEventListener(\"click\", this.hideDropdown);\n      this.inputRef.current.focus();\n    };\n\n    this.hideDropdown = () => {\n      this.setState({\n        isOpen: false\n      });\n      document.removeEventListener(\"click\", this.hideDropdown);\n    };\n\n    this.chooseItem = value => {\n      if (this.state.labelItem !== value) {\n        this.setState({\n          labelItem: value\n        });\n      }\n    };\n\n    this.renderDataDropDown = (item, index) => {\n      const {\n        value,\n        label\n      } = this.state.typeDropdown ? {\n        value: index,\n        label: item\n      } : item;\n      return React.createElement(\"li\", {\n        key: index,\n        value: value,\n        onClick: () => this.chooseItem(label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, label));\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        searchString: e.target.value\n      });\n    };\n\n    this.state = {\n      isOpen: false,\n      labelItem: null,\n      typeDropdown: null,\n      searchString: ''\n    };\n    this.inputRef = React.createRef();\n    this.showDropdown = this.showDropdown.bind(this);\n  }\n\n  componentWillMount() {\n    const {\n      label\n    } = this.props.list[0];\n    let firstItem = null;\n\n    if (typeof label != 'undefined') {\n      this.checkType(false);\n      firstItem = label;\n    } else {\n      this.checkType(true);\n      firstItem = this.props.list[0];\n    }\n\n    this.setState({\n      labelItem: firstItem\n    });\n  }\n\n  render() {\n    const {\n      list,\n      size,\n      border\n    } = this.props;\n    const dropdownClassname = `\n        dropdown\n        ${size === 'lg' && 'lg-dropdown'}\n        `;\n    const dropdowntoggleclass = `\n        dropdown-toggle\n        ${border === 'false' && 'bordernone'}\n        `;\n    /* searching code start here*/\n\n    var libraries = list,\n        searchString = this.state.searchString.trim().toLowerCase();\n\n    if (searchString.length > 0) {\n      libraries = libraries.filter(function (i) {\n        return i.label.toLowerCase().match(searchString);\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: ` ${dropdownClassname} ${this.state.isOpen ? 'open' : ''}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: dropdowntoggleclass,\n      type: \"button\",\n      onClick: this.showDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.labelItem), React.createElement(\"ul\", {\n      className: \"dropdown-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      autoFocus: true,\n      value: this.state.searchString,\n      ref: this.inputRef,\n      onChange: this.handleChange,\n      placeholder: \"Type here...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), libraries.map(this.renderDataDropDown)));\n  }\n\n}\n\ndropdownsearch.propTypes = {\n  list: PropTypes.array.isRequired\n};\ndropdownsearch.defaultProps = {\n  list: []\n};\nexport default dropdownsearch;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Dropdown/dropdownsearch/dropdownsearch.js"],"names":["React","Component","PropTypes","dropdownsearch","constructor","props","checkType","value","setState","typeDropdown","showDropdown","isOpen","document","addEventListener","hideDropdown","inputRef","current","focus","removeEventListener","chooseItem","state","labelItem","renderDataDropDown","item","index","label","handleChange","e","searchString","target","createRef","bind","componentWillMount","list","firstItem","render","size","border","dropdownClassname","dropdowntoggleclass","libraries","trim","toLowerCase","length","filter","i","match","map","propTypes","array","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass dropdownsearch extends Component {\n    static propTypes = {\n        list: PropTypes.array.isRequired\n      };\n      static defaultProps = {\n        list: []\n      };\n      \n      constructor(props) {\n        super(props);    \n        this.state = {\n          isOpen: false,\n          labelItem: null,\n          typeDropdown: null,\n          searchString: ''\n         \n        };\n        this.inputRef = React.createRef();\n        this.showDropdown = this.showDropdown.bind(this);\n\n\n      }\n    \n      componentWillMount() {\n        const { label } = this.props.list[0];\n        let firstItem = null;    \n        if (typeof label != 'undefined') {\n          this.checkType(false);\n          firstItem = label;\n        } else {\n          this.checkType(true);\n          firstItem = this.props.list[0];\n        }        \n        this.setState({\n            labelItem: firstItem\n        });    \n        \n      }\n      checkType = (value) => {\n        this.setState({\n            typeDropdown: value\n        });    \n      };\n      showDropdown = () => {\n        this.setState({ isOpen: true });\n        document.addEventListener(\"click\", this.hideDropdown);\n        this.inputRef.current.focus();\n      };\n      hideDropdown = () => {\n        this.setState({ isOpen: false });\n        document.removeEventListener(\"click\", this.hideDropdown);\n      };\n      chooseItem = (value) => {    \n        if (this.state.labelItem !== value) {\n          this.setState({\n            labelItem: value      \n          })\n        }    \n      };\n      \n      \n      renderDataDropDown = (item, index) => {    \n        const {value, label} = this.state.typeDropdown ? {value: index, label: item} : item;    \n        return (\n          <li\n            key={index}\n            value={value}\n            onClick={() => this.chooseItem(label)}\n          >\n            <a>{label}</a>\n          </li> \n        )\n      };\n     \n   handleChange = (e) => {\n     this.setState({ searchString: e.target.value });\n   }\n    render() {\n        const { list,size,border } = this.props; \n        const dropdownClassname = `\n        dropdown\n        ${size === 'lg' && 'lg-dropdown'}\n        `;   \n        const  dropdowntoggleclass = `\n        dropdown-toggle\n        ${border === 'false' && 'bordernone'}\n        `;   \n       /* searching code start here*/ \n       var libraries = list,\n       searchString = this.state.searchString.trim().toLowerCase();\n   if (searchString.length > 0) {\n     libraries = libraries.filter(function(i) {\n       return i.label.toLowerCase().match( searchString );\n     });\n   }\n        return (\n          <div className={ ` ${dropdownClassname} ${this.state.isOpen ? 'open' : ''}`} >\n            <button className={dropdowntoggleclass} type=\"button\" onClick={this.showDropdown}>\n               {this.state.labelItem}\n              \n            </button>\n            \n            <ul className=\"dropdown-menu\">\n                <li>\n                <input type=\"text\" autoFocus value={this.state.searchString} ref={this.inputRef} onChange={this.handleChange} placeholder=\"Type here...\"/>\n                </li>\n              {libraries.map(this.renderDataDropDown)}\n            </ul>\n          </div>\n        );\n    }\n}\n\nexport default dropdownsearch;"]},"metadata":{},"sourceType":"module"}