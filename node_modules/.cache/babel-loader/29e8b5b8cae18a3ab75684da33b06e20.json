{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/vicky/react-project/nexus project/current project/nexus(28-3-2020-morning)/nexus/src/components/input/textarea/textarea.js\";\nimport React, { Component } from 'react';\nimport autosize from \"autosize\";\nconst DEFAULT_HEIGHT = 20;\nexport default class Textarea extends React.Component {\n  componentDidMount() {\n    this.textarea.focus();\n    autosize(this.textarea);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.setFilledTextareaHeight();\n  }\n\n  setFilledTextareaHeight() {\n    if (this.mounted) {\n      const element = this.ghost;\n      this.setState({\n        height: element.clientHeight\n      });\n    }\n  }\n\n  setValue(event) {\n    const {\n      value\n    } = event.target;\n    this.setState({\n      value\n    });\n  }\n\n  getExpandableField() {\n    const isOneLine = this.state.height <= DEFAULT_HEIGHT;\n    const {\n      height,\n      value\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Add some text...\"), React.createElement(\"textarea\", {\n      className: \"textarea\",\n      name: \"textarea\",\n      id: \"textarea\",\n      autoFocus: true,\n      defaultValue: value,\n      style: {\n        height,\n        resize: isOneLine ? \"none\" : null\n      },\n      onChange: this.setValue,\n      onKeyUp: this.setFilledTextareaHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n  getGhostField() {\n    return React.createElement(\"div\", {\n      className: \"textarea textarea--ghost\",\n      ref: c => this.ghost = c,\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.getExpandableField(), this.getGhostField());\n  }\n\n}","map":{"version":3,"sources":["/home/mindbox/Documents/vicky/react-project/nexus project/current project/nexus(28-3-2020-morning)/nexus/src/components/input/textarea/textarea.js"],"names":["React","Component","autosize","DEFAULT_HEIGHT","Textarea","componentDidMount","textarea","focus","mounted","setFilledTextareaHeight","element","ghost","setState","height","clientHeight","setValue","event","value","target","getExpandableField","isOneLine","state","resize","getGhostField","c","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,MAAMC,cAAc,GAAG,EAAvB;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,KAAK,CAACC,SAA7B,CAAuC;AAElDI,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAcC,KAAd;AACAL,IAAAA,QAAQ,CAAC,KAAKI,QAAN,CAAR;AACD;;AAELD,EAAAA,iBAAiB,GAAG;AAClB,SAAKG,OAAL,GAAe,IAAf;AAEA,SAAKC,uBAAL;AACD;;AAEDA,EAAAA,uBAAuB,GAAG;AACxB,QAAI,KAAKD,OAAT,EAAkB;AAChB,YAAME,OAAO,GAAG,KAAKC,KAArB;AAEA,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAEH,OAAO,CAACI;AADJ,OAAd;AAGD;AACF;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,UAAM;AAAEC,MAAAA;AAAF,QAAWD,KAAK,CAACE,MAAvB;AAEA,SAAKN,QAAL,CAAc;AAAEK,MAAAA;AAAF,KAAd;AACD;;AAEDE,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWR,MAAX,IAAqBV,cAAvC;AACA,UAAM;AAAEU,MAAAA,MAAF;AAAUI,MAAAA;AAAV,QAAoB,KAAKI,KAA/B;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,EAAE,EAAC,UAHL;AAIE,MAAA,SAAS,EAAE,IAJb;AAKE,MAAA,YAAY,EAAEJ,KALhB;AAME,MAAA,KAAK,EAAE;AACLJ,QAAAA,MADK;AAELS,QAAAA,MAAM,EAAEF,SAAS,GAAG,MAAH,GAAY;AAFxB,OANT;AAUE,MAAA,QAAQ,EAAE,KAAKL,QAVjB;AAWE,MAAA,OAAO,EAAE,KAAKN,uBAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAkBD;;AAEDc,EAAAA,aAAa,GAAG;AACd,WACE;AACE,MAAA,SAAS,EAAC,0BADZ;AAEE,MAAA,GAAG,EAAGC,CAAD,IAAO,KAAKb,KAAL,GAAaa,CAF3B;AAGE,qBAAY,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKH,KAAL,CAAWJ,KALd,CADF;AASD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,kBAAL,EADH,EAEG,KAAKI,aAAL,EAFH,CADF;AAMD;;AAxEmD","sourcesContent":["import React, { Component } from 'react';\nimport autosize from \"autosize\";\n\nconst DEFAULT_HEIGHT = 20;\n\nexport default class Textarea extends React.Component {\n\n    componentDidMount() {\n        this.textarea.focus();\n        autosize(this.textarea);\n      }\n\n  componentDidMount() {\n    this.mounted = true;\n\n    this.setFilledTextareaHeight();\n  }\n\n  setFilledTextareaHeight() {\n    if (this.mounted) {\n      const element = this.ghost;\n\n      this.setState({\n        height: element.clientHeight,\n      });\n    }\n  }\n\n  setValue(event) {\n    const { value }= event.target;\n\n    this.setState({ value });\n  }\n\n  getExpandableField() {\n    const isOneLine = this.state.height <= DEFAULT_HEIGHT;\n    const { height, value } = this.state;\n\n    return (\n      <div>\n        <label htmlFor=\"textarea\">Add some text...</label>\n        <textarea\n          className=\"textarea\"\n          name=\"textarea\"\n          id=\"textarea\"\n          autoFocus={true}\n          defaultValue={value}\n          style={{\n            height,\n            resize: isOneLine ? \"none\" : null\n          }}\n          onChange={this.setValue}\n          onKeyUp={this.setFilledTextareaHeight}\n        />\n      </div>\n    );\n  }\n\n  getGhostField() {\n    return (\n      <div\n        className=\"textarea textarea--ghost\"\n        ref={(c) => this.ghost = c}\n        aria-hidden=\"true\"\n      >\n        {this.state.value}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.getExpandableField()}\n        {this.getGhostField()}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}