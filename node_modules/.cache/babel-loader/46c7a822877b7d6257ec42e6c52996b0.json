{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/Types/Tags.js\";\nimport React, { Component } from 'react';\nconst Default = ['form-group default-tags'];\nconst outline = ['form-group outline-tags'];\nconst filled = ['form-group filled-tags'];\nconst filter = ['default', 'focus'];\nconst colorDefault = ['form-group color color-default'];\nconst colorOutline = ['form-group color color-outline'];\nconst colorFilled = ['form-group color color-filled'];\n\nclass Tags extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tags: [{\n        id: 1,\n        Title: 'Enabled'\n      }, {\n        id: 2,\n        Title: 'Hover'\n      }],\n      color: [{\n        id: 1,\n        Title: \"Red\"\n      }, {\n        id: 2,\n        Title: \"Green\"\n      }, {\n        id: 3,\n        Title: \"Blue\"\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"input-chips-wrapper tags-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.tags.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${outline}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: filter[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })))), this.state.tags.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${outline}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: `${filter[i]} rounded`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.tags.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${Default}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: filter[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })))), this.state.tags.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${Default}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: `${filter[i]} rounded`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.tags.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${filled}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: filter[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })))), this.state.tags.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${filled}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: `${filter[i]} rounded`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.color.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${colorOutline} color`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: filter[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.color.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${colorOutline} color`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: `${filter[i]} rounded`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nexport default Tags;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/Types/Tags.js"],"names":["React","Component","Default","outline","filled","filter","colorDefault","colorOutline","colorFilled","Tags","constructor","props","state","tags","id","Title","color","render","map","chipsList","i","class"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nconst Default = ['form-group default-tags'];\nconst outline = ['form-group outline-tags'];\nconst filled = ['form-group filled-tags'];\nconst filter = ['default', 'focus'];\nconst colorDefault = ['form-group color color-default'];\nconst colorOutline = ['form-group color color-outline'];\nconst colorFilled = ['form-group color color-filled'];\nclass Tags extends Component {\n    constructor(props)\n    {\n        super(props)\n        this.state = {\n            tags: [\n                {\n                    id: 1,\n                    Title: 'Enabled',\n                },\n                {\n                    id: 2,\n                    Title: 'Hover',\n                },\n            ],\n            color: [\n                {\n                    id: 1,\n                    Title: \"Red\"\n                },\n\n                {\n                    id: 2,\n                    Title: \"Green\"\n                },\n\n                {\n                    id: 3,\n                    Title: \"Blue\"\n                }\n            ]\n        }\n    }\n    render() {\n        return (\n            <div className=\"input-chips-wrapper tags-list\">\n                <div className=\"row\">\n                    <div className=\"col-md-2\">\n                        <div className=\"flex-div\">\n                            {this.state.tags.map((chipsList, i) => \n                                <div className={`${outline}`} key={i}> \n                                    <label className={filter[i]}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                            {this.state.tags.map((chipsList, i) => \n                                <div className={`${outline}`} key={i}> \n                                    <label className={`${filter[i]} rounded`}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <div className=\"flex-div\">\n                            {this.state.tags.map((chipsList, i) => \n                                <div className={`${Default}`} key={i}> \n                                    <label className={filter[i]}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                            {this.state.tags.map((chipsList, i) => \n                                <div className={`${Default}`} key={i}> \n                                    <label className={`${filter[i]} rounded`}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                        </div>\n                    </div>  \n                    <div className=\"col-md-2\">\n                        <div className=\"flex-div\">\n                            {this.state.tags.map((chipsList, i) => \n                                <div className={`${filled}`} key={i}> \n                                    <label className={filter[i]}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                            {this.state.tags.map((chipsList, i) => \n                                <div className={`${filled}`} key={i}> \n                                    <label className={`${filter[i]} rounded`}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                        </div>\n                    </div>  \n                    <div className=\"col-md-3\">\n                        <div className=\"flex-div\">\n                            {this.state.color.map((chipsList, i) => \n                                <div className={`${colorOutline} color`} key={i}> \n                                    <label className={filter[i]}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                            <div>\n                            {this.state.color.map((chipsList, i) => \n                                <div className={`${colorOutline} color`} key={i}> \n                                    <label className={`${filter[i]} rounded`}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}</div>\n                        </div>\n                    </div>  \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tags;"]},"metadata":{},"sourceType":"module"}