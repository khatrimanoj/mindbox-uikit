{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/vicky/nexus/src/components/Table/tableStriped.js\";\nimport React, { Component } from 'react';\nconst tableHead = [\"Username\", \"E-mail\", \"Status\", \"Revenue\", \"Comment\"];\n\nclass tableStriped extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSort = column => e => {\n      const direction = this.state.sort.column ? this.state.sort.direction === 'asc' ? 'desc' : 'asc' : 'desc';\n      const sortedData = this.state.data.sort((a, b) => {\n        if (column === 'accountName') {\n          const nameA = a.accountName.toUpperCase(); // ignore upper and lowercase\n\n          const nameB = b.accountName.toUpperCase(); // ignore upper and lowercase\n\n          if (nameA < nameB) {\n            return -1;\n          }\n\n          if (nameA > nameB) {\n            return 1;\n          } // names must be equal\n\n\n          return 0;\n        } else {\n          return a.contractValue - b.contractValue;\n        }\n      });\n\n      if (direction === 'desc') {\n        sortedData.reverse();\n      }\n\n      this.setState({\n        data: sortedData,\n        sort: {\n          column,\n          direction\n        }\n      });\n    };\n\n    this.setArrow = column => {\n      let className = 'sort-direction';\n\n      if (this.state.sort.column === column) {\n        className += this.state.sort.direction === 'asc' ? ' asc' : ' desc';\n      }\n\n      console.log(className);\n      return className;\n    };\n\n    this.handleChange = e => {\n      let itemName = e.target.name;\n      let checked = e.target.checked;\n      this.setState(prevState => {\n        let {\n          list,\n          allChecked\n        } = prevState;\n\n        if (itemName === \"checkAll\") {\n          allChecked = checked;\n          list = list.map(item => ({ ...item,\n            isChecked: checked\n          }));\n        } else {\n          list = list.map(item => item.name === itemName ? { ...item,\n            isChecked: checked\n          } : item);\n          allChecked = list.every(item => item.isChecked);\n        }\n\n        return {\n          list,\n          allChecked\n        };\n      });\n    };\n\n    this.renderList = () => {\n      return this.state.list.map(item => React.createElement(\"tr\", {\n        key: item,\n        className: item.isChecked ? 'bg-white-smoke' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"custom-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: item.id,\n        key: item.id,\n        type: \"checkbox\",\n        name: item.name,\n        value: item.name,\n        checked: item.isChecked,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, item.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, item.emailId), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, item.status), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, item.Revenue), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, item.comment)));\n    };\n\n    this.state = {\n      allChecked: false,\n      sort: {\n        column: null,\n        direction: 'desc'\n      },\n      list: [{\n        id: 1,\n        name: \"SvenBrand1985\",\n        emailId: \"svenbrand1985@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 1,402.56\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 2,\n        name: \"AlexDavids45\",\n        emailId: \"alexdavids45@email.com\",\n        status: \"Disabled\",\n        Revenue: \"$ 892.46\",\n        comment: \"Brief text comment\",\n        isChecked: false\n      }, {\n        id: 3,\n        name: \"Sandy333\",\n        emailId: \"sandy333@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 873.00\",\n        comment: \"Add comment...\",\n        isChecked: true\n      }, {\n        id: 4,\n        name: \"SveDevonHillnBrand1985\",\n        emailId: \"devonhill@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 401.24\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 5,\n        name: \"EdwardHorton\",\n        emailId: \"edwardhorton@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 302.56\",\n        comment: \"Add comment...\",\n        isChecked: true\n      }, {\n        id: 6,\n        name: \"Megan145\",\n        emailId: \"megan145@email.com\",\n        status: \"Disabled\",\n        Revenue: \"$ 200.01\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 7,\n        name: \"Charles654432\",\n        emailId: \"charles654432@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 104.80\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 8,\n        name: \"AnnSmith\",\n        emailId: \"annsmith@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 98.15\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }]\n    }; // this.compareBy.bind(this);\n    // this.sortBy.bind(this);\n  } // compareBy(key) {\n  //     return function (a, b) {\n  //     if (a[key] < b[key]) return -1;\n  //     if (a[key] > b[key]) return 1;\n  //     return 0;\n  //     };\n  // }\n  // sortBy(key) {\n  //     let arrayCopy = [...this.state.list];\n  //     arrayCopy.sort(this.compareBy(key));\n  //     this.setState({list: arrayCopy});\n  // }\n\n\n  componentDidMount() {\n    // Stub data\n    const data = [];\n\n    for (let i = 1; i < 11; i++) {\n      const accountName = `Account ${i}`;\n      const contractValue = Math.floor(Math.random() * 1000000) + 10000;\n      data.push({\n        accountName,\n        contractValue\n      });\n    }\n\n    this.setState({\n      data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"table-responsive bordered-table mb-60\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Table Header\"), React.createElement(\"div\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sort-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dots-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }))), React.createElement(\"table\", {\n      className: \"table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        width: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"all\",\n      name: \"checkAll\",\n      checked: this.state.allChecked,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }))), tableHead.map(data => //{/* <th className=\"text-gray text-left\" onClick={() => this.sortBy(data)}>{data}</th> */ }\n    React.createElement(\"th\", {\n      className: \"text-gray text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, data)))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, this.renderList())));\n  }\n\n}\n\nexport default tableStriped;","map":{"version":3,"sources":["/home/mindbox/Documents/vicky/nexus/src/components/Table/tableStriped.js"],"names":["React","Component","tableHead","tableStriped","constructor","props","onSort","column","e","direction","state","sort","sortedData","data","a","b","nameA","accountName","toUpperCase","nameB","contractValue","reverse","setState","setArrow","className","console","log","handleChange","itemName","target","name","checked","prevState","list","allChecked","map","item","isChecked","every","renderList","id","emailId","status","Revenue","comment","componentDidMount","i","Math","floor","random","push","render","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,SAAS,GAAG,CAAC,UAAD,EAAa,QAAb,EAAuB,QAAvB,EAAiC,SAAjC,EAA4C,SAA5C,CAAlB;;AACA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsHrBC,MAtHqB,GAsHXC,MAAD,IAAaC,CAAD,IAAO;AAC1B,YAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBJ,MAAhB,GAA0B,KAAKG,KAAL,CAAWC,IAAX,CAAgBF,SAAhB,KAA8B,KAA9B,GAAsC,MAAtC,GAA+C,KAAzE,GAAkF,MAApG;AACA,YAAMG,UAAU,GAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBF,IAAhB,CAAqB,CAACG,CAAD,EAAIC,CAAJ,KAAU;AAChD,YAAIR,MAAM,KAAK,aAAf,EAA8B;AAC5B,gBAAMS,KAAK,GAAGF,CAAC,CAACG,WAAF,CAAcC,WAAd,EAAd,CAD4B,CACe;;AAC3C,gBAAMC,KAAK,GAAGJ,CAAC,CAACE,WAAF,CAAcC,WAAd,EAAd,CAF4B,CAEe;;AAC3C,cAAIF,KAAK,GAAGG,KAAZ,EAAmB;AACjB,mBAAO,CAAC,CAAR;AACD;;AACD,cAAIH,KAAK,GAAGG,KAAZ,EAAmB;AACjB,mBAAO,CAAP;AACD,WAR2B,CAU5B;;;AACA,iBAAO,CAAP;AACD,SAZD,MAYO;AACL,iBAAOL,CAAC,CAACM,aAAF,GAAkBL,CAAC,CAACK,aAA3B;AACD;AACF,OAhBkB,CAAnB;;AAkBA,UAAIX,SAAS,KAAK,MAAlB,EAA0B;AACxBG,QAAAA,UAAU,CAACS,OAAX;AACD;;AAED,WAAKC,QAAL,CAAc;AACZT,QAAAA,IAAI,EAAED,UADM;AAEZD,QAAAA,IAAI,EAAE;AACJJ,UAAAA,MADI;AAEJE,UAAAA;AAFI;AAFM,OAAd;AAOD,KArJoB;;AAAA,SAuJrBc,QAvJqB,GAuJThB,MAAD,IAAY;AACrB,UAAIiB,SAAS,GAAG,gBAAhB;;AAEA,UAAI,KAAKd,KAAL,CAAWC,IAAX,CAAgBJ,MAAhB,KAA2BA,MAA/B,EAAuC;AACrCiB,QAAAA,SAAS,IAAI,KAAKd,KAAL,CAAWC,IAAX,CAAgBF,SAAhB,KAA8B,KAA9B,GAAsC,MAAtC,GAA+C,OAA5D;AACD;;AAEDgB,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA,aAAOA,SAAP;AACD,KAjKoB;;AAAA,SAmKnBG,YAnKmB,GAmKJnB,CAAC,IAAI;AAChB,UAAIoB,QAAQ,GAAGpB,CAAC,CAACqB,MAAF,CAASC,IAAxB;AACA,UAAIC,OAAO,GAAGvB,CAAC,CAACqB,MAAF,CAASE,OAAvB;AACA,WAAKT,QAAL,CAAcU,SAAS,IAAI;AACvB,YAAI;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAuBF,SAA3B;;AACA,YAAIJ,QAAQ,KAAK,UAAjB,EAA6B;AACzBM,UAAAA,UAAU,GAAGH,OAAb;AACAE,UAAAA,IAAI,GAAGA,IAAI,CAACE,GAAL,CAASC,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWC,YAAAA,SAAS,EAAEN;AAAtB,WAAL,CAAb,CAAP;AACH,SAHD,MAGO;AACHE,UAAAA,IAAI,GAAGA,IAAI,CAACE,GAAL,CAASC,IAAI,IAChBA,IAAI,CAACN,IAAL,KAAcF,QAAd,GAAyB,EAAE,GAAGQ,IAAL;AAAWC,YAAAA,SAAS,EAAEN;AAAtB,WAAzB,GAA2DK,IADxD,CAAP;AAGAF,UAAAA,UAAU,GAAGD,IAAI,CAACK,KAAL,CAAWF,IAAI,IAAIA,IAAI,CAACC,SAAxB,CAAb;AACH;;AACD,eAAO;AAAEJ,UAAAA,IAAF;AAAQC,UAAAA;AAAR,SAAP;AACH,OAZD;AAaH,KAnLkB;;AAAA,SAqLnBK,UArLmB,GAqLN,MAAM;AACf,aAAO,KAAK7B,KAAL,CAAWuB,IAAX,CAAgBE,GAAhB,CAAoBC,IAAI,IAC3B;AAAI,QAAA,GAAG,EAAEA,IAAT;AAAe,QAAA,SAAS,EAAEA,IAAI,CAACC,SAAL,GAAiB,gBAAjB,GAAoC,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAED,IAAI,CAACI,EADb;AAEI,QAAA,GAAG,EAAEJ,IAAI,CAACI,EAFd;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,IAAI,EAAEJ,IAAI,CAACN,IAJf;AAKI,QAAA,KAAK,EAAEM,IAAI,CAACN,IALhB;AAMI,QAAA,OAAO,EAAEM,IAAI,CAACC,SANlB;AAOI,QAAA,QAAQ,EAAE,KAAKV,YAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAUI;AAAO,QAAA,GAAG,EAAES,IAAI,CAACI,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADJ,CADJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,IAAI,CAACN,IAAV,CAfJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKM,IAAI,CAACK,OAAV,CAhBJ,EAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,IAAI,CAACM,MAAV,CAjBJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKN,IAAI,CAACO,OAAV,CAlBJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKP,IAAI,CAACQ,OAAV,CAnBJ,CADG,CAAP;AAuBH,KA7MkB;;AAEf,SAAKlC,KAAL,GAAa;AACTwB,MAAAA,UAAU,EAAE,KADH;AAETvB,MAAAA,IAAI,EAAE;AACFJ,QAAAA,MAAM,EAAE,IADN;AAEFE,QAAAA,SAAS,EAAE;AAFT,OAFG;AAMTwB,MAAAA,IAAI,EAAE,CACF;AACIO,QAAAA,EAAE,EAAE,CADR;AAEIV,QAAAA,IAAI,EAAE,eAFV;AAGIW,QAAAA,OAAO,EAAE,yBAHb;AAIIC,QAAAA,MAAM,EAAE,QAJZ;AAKIC,QAAAA,OAAO,EAAE,YALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIP,QAAAA,SAAS,EAAE;AAPf,OADE,EAUF;AACIG,QAAAA,EAAE,EAAE,CADR;AAEIV,QAAAA,IAAI,EAAE,cAFV;AAGIW,QAAAA,OAAO,EAAE,wBAHb;AAIIC,QAAAA,MAAM,EAAE,UAJZ;AAKIC,QAAAA,OAAO,EAAE,UALb;AAMIC,QAAAA,OAAO,EAAE,oBANb;AAOIP,QAAAA,SAAS,EAAE;AAPf,OAVE,EAmBF;AACIG,QAAAA,EAAE,EAAE,CADR;AAEIV,QAAAA,IAAI,EAAE,UAFV;AAGIW,QAAAA,OAAO,EAAE,oBAHb;AAIIC,QAAAA,MAAM,EAAE,QAJZ;AAKIC,QAAAA,OAAO,EAAE,UALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIP,QAAAA,SAAS,EAAE;AAPf,OAnBE,EA4BF;AACIG,QAAAA,EAAE,EAAE,CADR;AAEIV,QAAAA,IAAI,EAAE,wBAFV;AAGIW,QAAAA,OAAO,EAAE,qBAHb;AAIIC,QAAAA,MAAM,EAAE,QAJZ;AAKIC,QAAAA,OAAO,EAAE,UALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIP,QAAAA,SAAS,EAAE;AAPf,OA5BE,EAqCF;AACIG,QAAAA,EAAE,EAAE,CADR;AAEIV,QAAAA,IAAI,EAAE,cAFV;AAGIW,QAAAA,OAAO,EAAE,wBAHb;AAIIC,QAAAA,MAAM,EAAE,QAJZ;AAKIC,QAAAA,OAAO,EAAE,UALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIP,QAAAA,SAAS,EAAE;AAPf,OArCE,EA8CF;AACIG,QAAAA,EAAE,EAAE,CADR;AAEIV,QAAAA,IAAI,EAAE,UAFV;AAGIW,QAAAA,OAAO,EAAE,oBAHb;AAIIC,QAAAA,MAAM,EAAE,UAJZ;AAKIC,QAAAA,OAAO,EAAE,UALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIP,QAAAA,SAAS,EAAE;AAPf,OA9CE,EAuDF;AACIG,QAAAA,EAAE,EAAE,CADR;AAEIV,QAAAA,IAAI,EAAE,eAFV;AAGIW,QAAAA,OAAO,EAAE,yBAHb;AAIIC,QAAAA,MAAM,EAAE,QAJZ;AAKIC,QAAAA,OAAO,EAAE,UALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIP,QAAAA,SAAS,EAAE;AAPf,OAvDE,EAgEF;AACIG,QAAAA,EAAE,EAAE,CADR;AAEIV,QAAAA,IAAI,EAAE,UAFV;AAGIW,QAAAA,OAAO,EAAE,oBAHb;AAIIC,QAAAA,MAAM,EAAE,QAJZ;AAKIC,QAAAA,OAAO,EAAE,SALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIP,QAAAA,SAAS,EAAE;AAPf,OAhEE;AANG,KAAb,CAFe,CAoFf;AACA;AACH,GAvFgC,CAwFjC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAECQ,EAAAA,iBAAiB,GAAG;AACrB;AACA,UAAMhC,IAAI,GAAG,EAAb;;AAEA,SAAK,IAAIiC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,YAAM7B,WAAW,GAAI,WAAU6B,CAAE,EAAjC;AACA,YAAM1B,aAAa,GAAG2B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,IAAsC,KAA5D;AAEApC,MAAAA,IAAI,CAACqC,IAAL,CAAU;AACRjC,QAAAA,WADQ;AAERG,QAAAA;AAFQ,OAAV;AAID;;AAED,SAAKE,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd;AACD;;AA0FCsC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFJ,CADJ,EAWI;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AACI,MAAA,EAAE,EAAC,KADP;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,OAAO,EAAE,KAAK1C,KAAL,CAAWwB,UAHxB;AAII,MAAA,QAAQ,EAAE,KAAKP,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AAAO,MAAA,GAAG,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ,CADJ,EAWKzB,SAAS,CAACiC,GAAV,CAActB,IAAI,IACf;AACA;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCA,IAAtC,CAFH,CAXL,CADJ,CADJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK0B,UAAL,EADL,CAnBJ,CAXJ,CADJ;AAqCH;;AArPgC;;AAwPrC,eAAepC,YAAf","sourcesContent":["import React, { Component } from 'react';\n\nconst tableHead = [\"Username\", \"E-mail\", \"Status\", \"Revenue\", \"Comment\"];\nclass tableStriped extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allChecked: false,\n            sort: {\n                column: null,\n                direction: 'desc',\n            },\n            list: [\n                {\n                    id: 1,\n                    name: \"SvenBrand1985\",\n                    emailId: \"svenbrand1985@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 1,402.56\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 2,\n                    name: \"AlexDavids45\",\n                    emailId: \"alexdavids45@email.com\",\n                    status: \"Disabled\",\n                    Revenue: \"$ 892.46\",\n                    comment: \"Brief text comment\",\n                    isChecked: false\n                },\n                {\n                    id: 3,\n                    name: \"Sandy333\",\n                    emailId: \"sandy333@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 873.00\",\n                    comment: \"Add comment...\",\n                    isChecked: true\n                },\n                {\n                    id: 4,\n                    name: \"SveDevonHillnBrand1985\",\n                    emailId: \"devonhill@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 401.24\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 5,\n                    name: \"EdwardHorton\",\n                    emailId: \"edwardhorton@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 302.56\",\n                    comment: \"Add comment...\",\n                    isChecked: true\n                },\n                {\n                    id: 6,\n                    name: \"Megan145\",\n                    emailId: \"megan145@email.com\",\n                    status: \"Disabled\",\n                    Revenue: \"$ 200.01\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 7,\n                    name: \"Charles654432\",\n                    emailId: \"charles654432@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 104.80\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 8,\n                    name: \"AnnSmith\",\n                    emailId: \"annsmith@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 98.15\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n            ]\n        };\n        \n        // this.compareBy.bind(this);\n        // this.sortBy.bind(this);\n    }\n    // compareBy(key) {\n    //     return function (a, b) {\n    //     if (a[key] < b[key]) return -1;\n    //     if (a[key] > b[key]) return 1;\n    //     return 0;\n    //     };\n    // }\n \n    // sortBy(key) {\n    //     let arrayCopy = [...this.state.list];\n    //     arrayCopy.sort(this.compareBy(key));\n    //     this.setState({list: arrayCopy});\n    // }\n\n     componentDidMount() {\n    // Stub data\n    const data = [];\n    \n    for (let i = 1; i < 11; i++) {\n      const accountName = `Account ${i}`;\n      const contractValue = Math.floor(Math.random() * 1000000) + 10000;\n\n      data.push({\n        accountName,\n        contractValue,\n      });\n    }\n    \n    this.setState({ data });\n  }\n\n  onSort = (column) => (e) => {\n    const direction = this.state.sort.column ? (this.state.sort.direction === 'asc' ? 'desc' : 'asc') : 'desc';\n    const sortedData = this.state.data.sort((a, b) => {\n      if (column === 'accountName') {\n        const nameA = a.accountName.toUpperCase(); // ignore upper and lowercase\n        const nameB = b.accountName.toUpperCase(); // ignore upper and lowercase\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n\n        // names must be equal\n        return 0;\n      } else {\n        return a.contractValue - b.contractValue;\n      }\n    });\n      \n    if (direction === 'desc') {\n      sortedData.reverse();\n    }\n    \n    this.setState({\n      data: sortedData,\n      sort: {\n        column,\n        direction,\n      }\n    });\n  };\n\n  setArrow = (column) => {\n    let className = 'sort-direction';\n    \n    if (this.state.sort.column === column) {\n      className += this.state.sort.direction === 'asc' ? ' asc' : ' desc';\n    }\n    \n    console.log(className);\n    \n    return className;\n  };\n\n    handleChange = e => {\n        let itemName = e.target.name;\n        let checked = e.target.checked;\n        this.setState(prevState => {\n            let { list, allChecked } = prevState;\n            if (itemName === \"checkAll\") {\n                allChecked = checked;\n                list = list.map(item => ({ ...item, isChecked: checked }));\n            } else {\n                list = list.map(item =>\n                    item.name === itemName ? { ...item, isChecked: checked } : item\n                );\n                allChecked = list.every(item => item.isChecked);\n            }\n            return { list, allChecked };\n        });\n    };\n\n    renderList = () => {\n        return this.state.list.map(item => (\n            <tr key={item} className={item.isChecked ? 'bg-white-smoke' : '' }>\n                <td>\n                    <div className=\"custom-checkbox\">\n                        <input\n                            id={item.id}\n                            key={item.id}\n                            type=\"checkbox\"\n                            name={item.name}\n                            value={item.name}\n                            checked={item.isChecked}\n                            onChange={this.handleChange}\n                        />\n                        <label for={item.id}></label>\n                    </div>\n                </td>\n                <td>{item.name}</td>\n                <td>{item.emailId}</td>\n                <td>{item.status}</td>\n                <td>{item.Revenue}</td>\n                <td>{item.comment}</td>\n            </tr>\n        ));\n    };\n    render() {\n        return (\n            <div className=\"table-responsive bordered-table mb-60\">\n                <div className=\"table-header\">\n                    <div className=\"h6\">Table Header</div>\n                    <div className=\"button\">\n                        <div className=\"sort-icon\">\n                    \n                        </div>\n                        <div className=\"dots-icon\">\n                    </div>\n                    </div>\n                </div>\n                <table className=\"table-striped\">\n                    <thead>\n                        <tr>\n                            <th style={{width:\"20px\"}}>\n                                <div className=\"custom-checkbox\">\n                                    <input type=\"checkbox\"\n                                        id=\"all\"\n                                        name=\"checkAll\"\n                                        checked={this.state.allChecked}\n                                        onChange={this.handleChange}/>\n                                    <label for=\"all\"></label>      \n                                </div>\n                            </th>\n                            {tableHead.map(data => (\n                                //{/* <th className=\"text-gray text-left\" onClick={() => this.sortBy(data)}>{data}</th> */ }\n                                <th className=\"text-gray text-left\" >{data}</th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderList()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n}\nexport default tableStriped;\n"]},"metadata":{},"sourceType":"module"}