{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/vicky/nexus/src/components/Table/tableStriped.js\";\nimport React, { Component } from 'react';\nconst tableHead = [\"Username\", \"E-mail\", \"Status\", \"Revenue\", \"Comment\"];\n\nclass tableStriped extends Component {\n  //     constructor(props) {\n  //       super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n  //         this.state = { //state is by default an object\n  //           allChecked: false,\n  //           tableData: [\n  //               {\n  //                   id: 1,\n  //                   userName: \"SvenBrand1985\",\n  //                   emailId: \"svenbrand1985@email.com\",\n  //                   status: \"Active\",\n  //                   Revenue: \"$ 1,402.56\",\n  //                   comment: \"Add comment...\",\n  //                   isChecked: false\n  //               },\n  //               {\n  //                   id: 2,\n  //                   userName: \"AlexDavids45\",\n  //                   emailId: \"alexdavids45@email.com\",\n  //                   status: \"Disabled\",\n  //                   Revenue: \"$ 892.46\",\n  //                   comment: \"Brief text comment\",\n  //                   isChecked: false\n  //               },\n  //               {\n  //                   id: 3,\n  //                   userName: \"Sandy333\",\n  //                   emailId: \"sandy333@email.com\",\n  //                   status: \"Active\",\n  //                   Revenue: \"$ 873.00\",\n  //                   comment: \"Add comment...\",\n  //                   isChecked: false\n  //               },\n  //               {\n  //                   id: 4,\n  //                   userName: \"SveDevonHillnBrand1985\",\n  //                   emailId: \"devonhill@email.com\",\n  //                   status: \"Active\",\n  //                   Revenue: \"$ 401.24\",\n  //                   comment: \"Add comment...\",\n  //                   isChecked: false\n  //               },\n  //               {\n  //                   id: 5,\n  //                   userName: \"EdwardHorton\",\n  //                   emailId: \"edwardhorton@email.com\",\n  //                   status: \"Active\",\n  //                   Revenue: \"$ 302.56\",\n  //                   comment: \"Add comment...\",\n  //                   isChecked: false\n  //               },\n  //               {\n  //                   id: 6,\n  //                   userName: \"Megan145\",\n  //                   emailId: \"megan145@email.com\",\n  //                   status: \"Disabled\",\n  //                   Revenue: \"$ 200.01\",\n  //                   comment: \"Add comment...\",\n  //                   isChecked: false\n  //               },\n  //               {\n  //                   id: 7,\n  //                   userName: \"Charles654432\",\n  //                   emailId: \"charles654432@email.com\",\n  //                   status: \"Active\",\n  //                   Revenue: \"$ 104.80\",\n  //                   comment: \"Add comment...\",\n  //                   isChecked: false\n  //               },\n  //               {\n  //                   id: 8,\n  //                   userName: \"AnnSmith\",\n  //                   emailId: \"annsmith@email.com\",\n  //                   status: \"Active\",\n  //                   Revenue: \"$ 98.15\",\n  //                   comment: \"Add comment...\",\n  //                   isChecked: false\n  //               },\n  //           ],\n  //           tableHead,\n  //         };\n  //     };\n  //     handleChange = e => {\n  //         let itemName = e.target.name;\n  //         let checked = e.target.checked;\n  //         this.setState(prevState => {\n  //         let { list, allChecked } = prevState;\n  //         if (itemName === \"checkAll\") {\n  //             allChecked = checked;\n  //             list = this.state.tableData.map(data => ({ ...data, isChecked: checked }));\n  //         } else {\n  //             list = this.state.tableData.map(data =>\n  //             data.userName === itemName ? { ...data, isChecked: checked } : data\n  //             );\n  //             allChecked = this.state.tableData.every(data => data.isChecked);\n  //         }\n  //         return { list, allChecked };\n  //         });\n  //     };\n  //     render() {\n  //         return (\n  //             <div className=\"table-responsive bordered-table mb-60\">\n  //                 <div className=\"table-header\">\n  //                     <div className=\"h6\">Table Header</div>\n  //                     <div className=\"button\">\n  //                         <div className=\"sort-icon\">\n  //                         </div>\n  //                         <div className=\"dots-icon\">\n  //                         </div>\n  //                     </div>\n  //                 </div>\n  //                 <table className=\"table-striped\">\n  //                     <thead>\n  //                         <tr>\n  //                             <th style={{width:\"20px\"}}>\n  //                                 <div className=\"\">\n  //                                     <input type=\"checkbox\" type=\"checkbox\"\n  //                                         name=\"checkAll\"\n  //                                         checked={this.state.allChecked}\n  //                                         onChange={this.handleChange}/>\n  //                                     {/* <label for=\"all\"></label>       */}\n  //                                 </div>\n  //                             </th>\n  //                             {tableHead.map(data => (\n  //                                 <th key={data} className=\"text-gray text-left\">{data}</th>\n  //                             ))}\n  //                         </tr>\n  //                     </thead>\n  //                     <tbody>    \n  //                         {this.state.tableData.map((data, i) => {\n  //                             return  <tr key={data.id}>\n  //                                         <td key={data}>\n  //                                             <div className=\"\">\n  //                                                 <input type=\"checkbox\" \n  //                                                     key={data.id}\n  //                                                     type=\"checkbox\"\n  //                                                     name={data.userName}\n  //                                                     value={data.userName}\n  //                                                     checked={data.isChecked}\n  //                                                     onChange={this.handleChange}/>\n  //                                                 {/* <label for={data.id}></label>       */}\n  //                                             </div>\n  //                                         </td>\n  //                                         <td>{data.userName}</td>\n  //                                         <td>{data.emailId}</td>\n  //                                         <td>{data.status}</td>\n  //                                         <td>{data.Revenue}</td>\n  //                                         <td>{data.comment}</td>\n  //                                     </tr>\n  //                         })}\n  //                     </tbody>\n  //                 </table>\n  //             </div>\n  //         );\n  //     }\n  // }\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let itemName = e.target.name;\n      let checked = e.target.checked;\n      this.setState(prevState => {\n        let {\n          list,\n          allChecked\n        } = prevState;\n\n        if (itemName === \"checkAll\") {\n          allChecked = checked;\n          list = list.map(item => ({ ...item,\n            isChecked: checked\n          }));\n        } else {\n          list = list.map(item => item.name === itemName ? { ...item,\n            isChecked: checked\n          } : item);\n          allChecked = list.every(item => item.isChecked);\n        }\n\n        return {\n          list,\n          allChecked\n        };\n      });\n    };\n\n    this.renderList = () => {\n      return this.state.list.map(item => React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"custom-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        key: item.id,\n        type: \"checkbox\",\n        name: item.name,\n        value: item.name,\n        checked: item.isChecked,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, item.userName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, item.emailId), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, item.status), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, item.Revenue), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, item.comment)));\n    };\n\n    this.renderList1 = () => {\n      return this.state.list.map(item => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        key: item.id,\n        type: \"checkbox\",\n        name: item.name,\n        value: item.name,\n        checked: item.isChecked,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, item.name)));\n    };\n\n    this.state = {\n      allChecked: false,\n      list: [{\n        id: 1,\n        userName: \"SvenBrand1985\",\n        emailId: \"svenbrand1985@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 1,402.56\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 2,\n        userName: \"AlexDavids45\",\n        emailId: \"alexdavids45@email.com\",\n        status: \"Disabled\",\n        Revenue: \"$ 892.46\",\n        comment: \"Brief text comment\",\n        isChecked: false\n      }, {\n        id: 3,\n        userName: \"Sandy333\",\n        emailId: \"sandy333@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 873.00\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 4,\n        userName: \"SveDevonHillnBrand1985\",\n        emailId: \"devonhill@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 401.24\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 5,\n        userName: \"EdwardHorton\",\n        emailId: \"edwardhorton@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 302.56\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 6,\n        userName: \"Megan145\",\n        emailId: \"megan145@email.com\",\n        status: \"Disabled\",\n        Revenue: \"$ 200.01\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 7,\n        userName: \"Charles654432\",\n        emailId: \"charles654432@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 104.80\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 8,\n        userName: \"AnnSmith\",\n        emailId: \"annsmith@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 98.15\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"table-responsive bordered-table mb-60\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"checkAll\",\n      checked: this.state.allChecked,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }), \"Check all\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), this.renderList1()), React.createElement(\"div\", {\n      className: \"table-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Table Header\"), React.createElement(\"div\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sort-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dots-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }))), React.createElement(\"table\", {\n      className: \"table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        width: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"all\",\n      name: \"checkAll\",\n      checked: this.state.allChecked,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }))), tableHead.map(data => React.createElement(\"th\", {\n      key: data,\n      className: \"text-gray text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, data)))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, this.renderList()))) //   <div>\n    //         <input\n    //             type=\"checkbox\"\n    //             name=\"checkAll\"\n    //             checked={this.state.allChecked}\n    //             onChange={this.handleChange}\n    //         />\n    //         <br />\n    //         {this.renderList()}\n    //     </div>\n    ;\n  }\n\n}\n\nexport default tableStriped;","map":{"version":3,"sources":["/home/mindbox/Documents/vicky/nexus/src/components/Table/tableStriped.js"],"names":["React","Component","tableHead","tableStriped","constructor","props","handleChange","e","itemName","target","name","checked","setState","prevState","list","allChecked","map","item","isChecked","every","renderList","state","id","userName","emailId","status","Revenue","comment","renderList1","render","width","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst tableHead = [\"Username\", \"E-mail\", \"Status\", \"Revenue\", \"Comment\"];\nclass tableStriped extends Component {\n    //     constructor(props) {\n    //       super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n    //         this.state = { //state is by default an object\n    //           allChecked: false,\n    //           tableData: [\n    //               {\n    //                   id: 1,\n    //                   userName: \"SvenBrand1985\",\n    //                   emailId: \"svenbrand1985@email.com\",\n    //                   status: \"Active\",\n    //                   Revenue: \"$ 1,402.56\",\n    //                   comment: \"Add comment...\",\n    //                   isChecked: false\n    //               },\n    //               {\n    //                   id: 2,\n    //                   userName: \"AlexDavids45\",\n    //                   emailId: \"alexdavids45@email.com\",\n    //                   status: \"Disabled\",\n    //                   Revenue: \"$ 892.46\",\n    //                   comment: \"Brief text comment\",\n    //                   isChecked: false\n    //               },\n    //               {\n    //                   id: 3,\n    //                   userName: \"Sandy333\",\n    //                   emailId: \"sandy333@email.com\",\n    //                   status: \"Active\",\n    //                   Revenue: \"$ 873.00\",\n    //                   comment: \"Add comment...\",\n    //                   isChecked: false\n    //               },\n    //               {\n    //                   id: 4,\n    //                   userName: \"SveDevonHillnBrand1985\",\n    //                   emailId: \"devonhill@email.com\",\n    //                   status: \"Active\",\n    //                   Revenue: \"$ 401.24\",\n    //                   comment: \"Add comment...\",\n    //                   isChecked: false\n    //               },\n    //               {\n    //                   id: 5,\n    //                   userName: \"EdwardHorton\",\n    //                   emailId: \"edwardhorton@email.com\",\n    //                   status: \"Active\",\n    //                   Revenue: \"$ 302.56\",\n    //                   comment: \"Add comment...\",\n    //                   isChecked: false\n    //               },\n    //               {\n    //                   id: 6,\n    //                   userName: \"Megan145\",\n    //                   emailId: \"megan145@email.com\",\n    //                   status: \"Disabled\",\n    //                   Revenue: \"$ 200.01\",\n    //                   comment: \"Add comment...\",\n    //                   isChecked: false\n    //               },\n    //               {\n    //                   id: 7,\n    //                   userName: \"Charles654432\",\n    //                   emailId: \"charles654432@email.com\",\n    //                   status: \"Active\",\n    //                   Revenue: \"$ 104.80\",\n    //                   comment: \"Add comment...\",\n    //                   isChecked: false\n    //               },\n    //               {\n    //                   id: 8,\n    //                   userName: \"AnnSmith\",\n    //                   emailId: \"annsmith@email.com\",\n    //                   status: \"Active\",\n    //                   Revenue: \"$ 98.15\",\n    //                   comment: \"Add comment...\",\n    //                   isChecked: false\n    //               },\n    //           ],\n    //           tableHead,\n    //         };\n    //     };\n\n    //     handleChange = e => {\n    //         let itemName = e.target.name;\n    //         let checked = e.target.checked;\n    //         this.setState(prevState => {\n    //         let { list, allChecked } = prevState;\n    //         if (itemName === \"checkAll\") {\n    //             allChecked = checked;\n    //             list = this.state.tableData.map(data => ({ ...data, isChecked: checked }));\n    //         } else {\n    //             list = this.state.tableData.map(data =>\n    //             data.userName === itemName ? { ...data, isChecked: checked } : data\n    //             );\n    //             allChecked = this.state.tableData.every(data => data.isChecked);\n    //         }\n    //         return { list, allChecked };\n    //         });\n    //     };\n\n    //     render() {\n    //         return (\n    //             <div className=\"table-responsive bordered-table mb-60\">\n    //                 <div className=\"table-header\">\n    //                     <div className=\"h6\">Table Header</div>\n    //                     <div className=\"button\">\n    //                         <div className=\"sort-icon\">\n                            \n    //                         </div>\n    //                         <div className=\"dots-icon\">\n\n    //                         </div>\n    //                     </div>\n    //                 </div>\n    //                 <table className=\"table-striped\">\n    //                     <thead>\n    //                         <tr>\n    //                             <th style={{width:\"20px\"}}>\n    //                                 <div className=\"\">\n    //                                     <input type=\"checkbox\" type=\"checkbox\"\n    //                                         name=\"checkAll\"\n    //                                         checked={this.state.allChecked}\n    //                                         onChange={this.handleChange}/>\n    //                                     {/* <label for=\"all\"></label>       */}\n    //                                 </div>\n    //                             </th>\n    //                             {tableHead.map(data => (\n    //                                 <th key={data} className=\"text-gray text-left\">{data}</th>\n    //                             ))}\n    //                         </tr>\n    //                     </thead>\n    //                     <tbody>    \n    //                         {this.state.tableData.map((data, i) => {\n    //                             return  <tr key={data.id}>\n    //                                         <td key={data}>\n    //                                             <div className=\"\">\n    //                                                 <input type=\"checkbox\" \n    //                                                     key={data.id}\n    //                                                     type=\"checkbox\"\n    //                                                     name={data.userName}\n    //                                                     value={data.userName}\n    //                                                     checked={data.isChecked}\n    //                                                     onChange={this.handleChange}/>\n    //                                                 {/* <label for={data.id}></label>       */}\n    //                                             </div>\n    //                                         </td>\n    //                                         <td>{data.userName}</td>\n    //                                         <td>{data.emailId}</td>\n    //                                         <td>{data.status}</td>\n    //                                         <td>{data.Revenue}</td>\n    //                                         <td>{data.comment}</td>\n    //                                     </tr>\n    //                         })}\n    //                     </tbody>\n    //                 </table>\n    //             </div>\n    //         );\n    //     }\n    // }\n    constructor(props) {\n        super(props);\n        this.state = {\n            allChecked: false,\n            list: [\n                {\n                    id: 1,\n                    userName: \"SvenBrand1985\",\n                    emailId: \"svenbrand1985@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 1,402.56\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 2,\n                    userName: \"AlexDavids45\",\n                    emailId: \"alexdavids45@email.com\",\n                    status: \"Disabled\",\n                    Revenue: \"$ 892.46\",\n                    comment: \"Brief text comment\",\n                    isChecked: false\n                },\n                {\n                    id: 3,\n                    userName: \"Sandy333\",\n                    emailId: \"sandy333@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 873.00\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 4,\n                    userName: \"SveDevonHillnBrand1985\",\n                    emailId: \"devonhill@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 401.24\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 5,\n                    userName: \"EdwardHorton\",\n                    emailId: \"edwardhorton@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 302.56\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 6,\n                    userName: \"Megan145\",\n                    emailId: \"megan145@email.com\",\n                    status: \"Disabled\",\n                    Revenue: \"$ 200.01\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 7,\n                    userName: \"Charles654432\",\n                    emailId: \"charles654432@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 104.80\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 8,\n                    userName: \"AnnSmith\",\n                    emailId: \"annsmith@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 98.15\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n            ]\n        };\n    }\n\n    handleChange = e => {\n        let itemName = e.target.name;\n        let checked = e.target.checked;\n        this.setState(prevState => {\n            let { list, allChecked } = prevState;\n            if (itemName === \"checkAll\") {\n                allChecked = checked;\n                list = list.map(item => ({ ...item, isChecked: checked }));\n            } else {\n                list = list.map(item =>\n                    item.name === itemName ? { ...item, isChecked: checked } : item\n                );\n                allChecked = list.every(item => item.isChecked);\n            }\n            return { list, allChecked };\n        });\n    };\n\n    renderList = () => {\n        return this.state.list.map(item => (\n            <tr>\n                <td>\n                    <div className=\"custom-checkbox\">\n                        <input\n                            key={item.id}\n                            type=\"checkbox\"\n                            name={item.name}\n                            value={item.name}\n                            checked={item.isChecked}\n                            onChange={this.handleChange}\n                        />\n                        <label for={item.id}></label>\n                    </div>\n                </td>\n                <td>{item.userName}</td>\n                <td>{item.emailId}</td>\n                <td>{item.status}</td>\n                <td>{item.Revenue}</td>\n                <td>{item.comment}</td>\n            </tr>\n        ));\n    };\n    renderList1 = () => {\n    return this.state.list.map(item => (\n      <div>\n        <input\n          key={item.id}\n          type=\"checkbox\"\n          name={item.name}\n          value={item.name}\n          checked={item.isChecked}\n          onChange={this.handleChange}\n        />\n        <label>{item.name}</label>\n      </div>\n    ));\n  };\n    render() {\n        return (\n            \n            <div className=\"table-responsive bordered-table mb-60\">\n                <div>\n        <input\n          type=\"checkbox\"\n          name=\"checkAll\"\n          checked={this.state.allChecked}\n          onChange={this.handleChange}\n        />\n        Check all\n        <br />\n        {this.renderList1()}\n      </div>\n                <div className=\"table-header\">\n                    <div className=\"h6\">Table Header</div>\n                    <div className=\"button\">\n                        <div className=\"sort-icon\">\n                    \n                        </div>\n                        <div className=\"dots-icon\">\n                    </div>\n                    </div>\n                </div>\n                <table className=\"table-striped\">\n                <thead>\n                    <tr>\n                        <th style={{width:\"20px\"}}>\n                            <div className=\"custom-checkbox\">\n                                <input type=\"checkbox\" id=\"all\"\n                                    name=\"checkAll\"\n                                    checked={this.state.allChecked}\n                                    onChange={this.handleChange}/>\n                                <label for=\"all\"></label>      \n                            </div>\n                        </th>\n                        {tableHead.map(data => (\n                            <th key={data} className=\"text-gray text-left\">{data}</th>\n                        ))}\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderList()}\n                    </tbody>\n                </table>\n            </div>\n                \n        //   <div>\n        //         <input\n        //             type=\"checkbox\"\n        //             name=\"checkAll\"\n        //             checked={this.state.allChecked}\n        //             onChange={this.handleChange}\n        //         />\n        //         <br />\n        //         {this.renderList()}\n        //     </div>\n        );\n    }\n\n}\nexport default tableStriped;\n"]},"metadata":{},"sourceType":"module"}