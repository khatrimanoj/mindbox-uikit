{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/vicky/react-project/nexus project/current project/nexus(28-3-2020-morning)/nexus/src/components/input/switch/switchtoggle/Switch_toggle.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Switch_toggle extends Component {\n  componentDidMount() {\n    // Apply the indeterminate attribute of the checkbox input\n    this.selector.indeterminate = this.props.indeterminate;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.indeterminate !== this.props.indeterminate) {\n      this.selector.indeterminate = this.props.indeterminate;\n    }\n  }\n\n  render() {\n    const {\n      id,\n      label,\n      type,\n      color,\n      indeterminate,\n      hasError,\n      ...inputProps\n    } = this.props;\n    const checkboxClassname = `\n        m-checkbox \n          ${type === 'switch' && 'm-checkbox--switch'}\n          ${hasError && 'm-checkbox--has-error'}\n        `;\n    const inputClassname = `\n          m-checkbox__input\n         \n          ${type === 'switch' && 'm-checkbox--switch__input'}\n          ${hasError && 'm-checkbox--has-error__input'}\n          ${color === 'red' && 'c-red'}\n          ${color === 'orange' && 'c-orange'}\n          ${color === 'yellow' && 'c-yellow'}\n          ${color === 'la-rioja' && 'c-la-rioja'}\n          ${color === 'green' && 'c-green'}\n          ${color === 'pelorous' && 'c-pelorous'}\n          ${color === 'daisy-bush' && 'c-daisy-bush'}\n          ${color === 'violet' && 'c-violet'}\n          ${color === 'mulberry' && 'c-mulberry'}\n          ${color === 'korma' && 'c-korma'}\n          ${color === 'buttercup' && 'c-buttercup'}\n          ${color === 'primary-variant' && 'c-primary-variant'}\n          ${color === 'secondary' && 'c-secondary'}\n          ${color === 'secondary-variant' && 'c-secondary-variant'}\n          ${color === 'dark-bg' && 'c-dark-bg'}\n          ${color === 'dark-bg-variant' && 'c-dark-bg-variant'}\n          ${color === 'black' && 'c-black'}\n           ${color === 'gray' && 'c-gray'}\n          \n    \n       \n         \n        `;\n    const labelClassname = `\n          m-checkbox__label\n          ${type === 'switch' && 'm-checkbox--switch__label'}\n        `;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: checkboxClassname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({\n      type: \"checkbox\",\n      className: inputClassname,\n      ref: el => this.selector = el,\n      id: id\n    }, inputProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: labelClassname,\n      htmlFor: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, label))));\n  }\n\n}\n\nSwitch_toggle.propTypes = {\n  hasError: PropTypes.bool,\n  id: PropTypes.string.isRequired,\n  indeterminate: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['default', 'switch'])\n};\nSwitch_toggle.defaultProps = {\n  hasError: false,\n  indeterminate: undefined,\n  type: 'default'\n};\nexport default Switch_toggle;","map":{"version":3,"sources":["/home/mindbox/Documents/vicky/react-project/nexus project/current project/nexus(28-3-2020-morning)/nexus/src/components/input/switch/switchtoggle/Switch_toggle.js"],"names":["React","Component","PropTypes","Switch_toggle","componentDidMount","selector","indeterminate","props","componentDidUpdate","prevProps","render","id","label","type","color","hasError","inputProps","checkboxClassname","inputClassname","labelClassname","el","propTypes","bool","string","isRequired","oneOf","defaultProps","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAchCG,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,QAAL,CAAcC,aAAd,GAA8B,KAAKC,KAAL,CAAWD,aAAzC;AACD;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACH,aAAV,KAA4B,KAAKC,KAAL,CAAWD,aAA3C,EAA0D;AACxD,WAAKD,QAAL,CAAcC,aAAd,GAA8B,KAAKC,KAAL,CAAWD,aAAzC;AACD;AACF;;AAEHI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,IAAb;AAAmBC,MAAAA,KAAnB;AAA0BR,MAAAA,aAA1B;AAAyCS,MAAAA,QAAzC;AAAmD,SAAGC;AAAtD,QAAqE,KAAKT,KAAhF;AACA,UAAMU,iBAAiB,GAAI;;YAEvBJ,IAAI,KAAK,QAAT,IAAqB,oBAAqB;YAC1CE,QAAQ,IAAI,uBAAwB;SAHxC;AAMA,UAAMG,cAAc,GAAI;;;YAGpBL,IAAI,KAAK,QAAT,IAAqB,2BAA4B;YACjDE,QAAQ,IAAI,8BAA+B;YAC3CD,KAAK,KAAK,KAAV,IAAmB,OAAQ;YAC3BA,KAAK,KAAK,QAAV,IAAsB,UAAW;YACjCA,KAAK,KAAK,QAAV,IAAsB,UAAW;YACjCA,KAAK,KAAK,UAAV,IAAwB,YAAa;YACrCA,KAAK,KAAK,OAAV,IAAqB,SAAU;YAC/BA,KAAK,KAAK,UAAV,IAAwB,YAAa;YACrCA,KAAK,KAAK,YAAV,IAA0B,cAAe;YACzCA,KAAK,KAAK,QAAV,IAAsB,UAAW;YACjCA,KAAK,KAAK,UAAV,IAAwB,YAAa;YACrCA,KAAK,KAAK,OAAV,IAAqB,SAAU;YAC/BA,KAAK,KAAK,WAAV,IAAyB,aAAc;YACvCA,KAAK,KAAK,iBAAV,IAA+B,mBAAoB;YACnDA,KAAK,KAAK,WAAV,IAAyB,aAAc;YACvCA,KAAK,KAAK,mBAAV,IAAiC,qBAAsB;YACvDA,KAAK,KAAK,SAAV,IAAuB,WAAY;YACnCA,KAAK,KAAK,iBAAV,IAA+B,mBAAoB;YACnDA,KAAK,KAAK,OAAV,IAAqB,SAAU;aAC9BA,KAAK,KAAK,MAAV,IAAoB,QAAS;;;;;SAtBlC;AA6BA,UAAMK,cAAc,GAAI;;YAEpBN,IAAI,KAAK,QAAT,IAAqB,2BAA4B;SAFrD;AAIA,WACI,0CACG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEI,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,SAAS,EAAEC,cAFb;AAGE,MAAA,GAAG,EAAEE,EAAE,IAAK,KAAKf,QAAL,GAAgBe,EAH9B;AAIE,MAAA,EAAE,EAAET;AAJN,OAKMK,UALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFH,EASG;AAAO,MAAA,SAAS,EAAEG,cAAlB;AAAkC,MAAA,OAAO,EAAER,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDC,KAAhD,CATH,CADF,CADH,CADJ;AAiBH;;AAnFiC;;AAAhCT,a,CACKkB,S,GAAY;AACfN,EAAAA,QAAQ,EAAEb,SAAS,CAACoB,IADL;AAEfX,EAAAA,EAAE,EAAET,SAAS,CAACqB,MAAV,CAAiBC,UAFN;AAGflB,EAAAA,aAAa,EAAEJ,SAAS,CAACoB,IAHV;AAIfV,EAAAA,KAAK,EAAEV,SAAS,CAACqB,MAAV,CAAiBC,UAJT;AAKfX,EAAAA,IAAI,EAAEX,SAAS,CAACuB,KAAV,CAAgB,CAAC,SAAD,EAAY,QAAZ,CAAhB;AALS,C;AADjBtB,a,CAQOuB,Y,GAAe;AACpBX,EAAAA,QAAQ,EAAE,KADU;AAEpBT,EAAAA,aAAa,EAAEqB,SAFK;AAGpBd,EAAAA,IAAI,EAAE;AAHc,C;AA8E5B,eAAeV,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Switch_toggle extends Component {\n    static propTypes = {\n        hasError: PropTypes.bool,\n        id: PropTypes.string.isRequired,\n        indeterminate: PropTypes.bool,\n        label: PropTypes.string.isRequired,\n        type: PropTypes.oneOf(['default', 'switch']),\n      };\n      static defaultProps = {\n        hasError: false,\n        indeterminate: undefined,\n        type: 'default',\n      };\n\n      componentDidMount() {\n        // Apply the indeterminate attribute of the checkbox input\n        this.selector.indeterminate = this.props.indeterminate;\n      }\n    \n      componentDidUpdate(prevProps) {\n        if (prevProps.indeterminate !== this.props.indeterminate) {\n          this.selector.indeterminate = this.props.indeterminate;\n        }\n      }\n\n    render() {\n        const { id, label, type, color, indeterminate, hasError, ...inputProps } = this.props;\n        const checkboxClassname = `\n        m-checkbox \n          ${type === 'switch' && 'm-checkbox--switch'}\n          ${hasError && 'm-checkbox--has-error'}\n        `;\n        \n        const inputClassname = `\n          m-checkbox__input\n         \n          ${type === 'switch' && 'm-checkbox--switch__input'}\n          ${hasError && 'm-checkbox--has-error__input'}\n          ${color === 'red' && 'c-red'}\n          ${color === 'orange' && 'c-orange'}\n          ${color === 'yellow' && 'c-yellow'}\n          ${color === 'la-rioja' && 'c-la-rioja'}\n          ${color === 'green' && 'c-green'}\n          ${color === 'pelorous' && 'c-pelorous'}\n          ${color === 'daisy-bush' && 'c-daisy-bush'}\n          ${color === 'violet' && 'c-violet'}\n          ${color === 'mulberry' && 'c-mulberry'}\n          ${color === 'korma' && 'c-korma'}\n          ${color === 'buttercup' && 'c-buttercup'}\n          ${color === 'primary-variant' && 'c-primary-variant'}\n          ${color === 'secondary' && 'c-secondary'}\n          ${color === 'secondary-variant' && 'c-secondary-variant'}\n          ${color === 'dark-bg' && 'c-dark-bg'}\n          ${color === 'dark-bg-variant' && 'c-dark-bg-variant'}\n          ${color === 'black' && 'c-black'}\n           ${color === 'gray' && 'c-gray'}\n          \n    \n       \n         \n        `;\n        \n        const labelClassname = `\n          m-checkbox__label\n          ${type === 'switch' && 'm-checkbox--switch__label'}\n        `;\n        return (\n            <>\n               <div className=\"col-md-3\">\n                 <div className={checkboxClassname}>\n                \n                    <input\n                      type=\"checkbox\"\n                      className={inputClassname}\n                      ref={el => (this.selector = el)}\n                      id={id}\n                      {...inputProps}\n                    />\n                    <label className={labelClassname} htmlFor={id}>{label}</label>      \n                 </div>\n               </div>\n            </>\n        );\n    }\n}\n\nexport default Switch_toggle;"]},"metadata":{},"sourceType":"module"}