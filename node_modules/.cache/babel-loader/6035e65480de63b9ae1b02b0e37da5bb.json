{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/vicky/react-project/nexus project/current project/nexus(28-3-2020-morning)/nexus/src/components/input/Checkbox/chekboxhtml/chekbox.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Checkboxdone extends Component {\n  componentDidMount() {\n    // Apply the indeterminate attribute of the checkbox input\n    this.selector.indeterminate = this.props.indeterminate;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.indeterminate !== this.props.indeterminate) {\n      this.selector.indeterminate = this.props.indeterminate;\n    }\n  }\n\n  render() {\n    const {\n      id,\n      label,\n      color,\n      indeterminate,\n      hasError,\n      ...inputProps\n    } = this.props;\n    const checkboxClassname = `\n    m-checkbox \n     \n      ${hasError && 'm-checkbox--has-error'}\n    `;\n    const inputClassname = `\n      m-checkbox__input\n     \n      ${type === 'switch' && 'm-checkbox--switch__input'}\n      ${hasError && 'm-checkbox--has-error__input'}\n      ${color === 'red' && 'c-red'}\n      ${color === 'orange' && 'c-orange'}\n      ${color === 'yellow' && 'c-yellow'}\n      ${color === 'la-rioja' && 'c-la-rioja'}\n      ${color === 'green' && 'c-green'}\n      ${color === 'pelorous' && 'c-pelorous'}\n      ${color === 'daisy-bush' && 'c-daisy-bush'}\n      ${color === 'violet' && 'c-violet'}\n      ${color === 'mulberry' && 'c-mulberry'}\n      ${color === 'korma' && 'c-korma'}\n      ${color === 'buttercup' && 'c-buttercup'}\n      ${color === 'primary-variant' && 'c-primary-variant'}\n      ${color === 'secondary' && 'c-secondary'}\n      ${color === 'secondary-variant' && 'c-secondary-variant'}\n      ${color === 'dark-bg' && 'c-dark-bg'}\n      ${color === 'dark-bg-variant' && 'c-dark-bg-variant'}\n      ${color === 'black' && 'c-black'}\n       ${color === 'gray' && 'c-gray'}\n      \n\n   \n     \n    `;\n    const labelClassname = `\n      m-checkbox__label\n      ${type === 'switch' && 'm-checkbox--switch__label'}\n    `;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: checkboxClassname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({\n      type: \"checkbox\",\n      className: inputClassname,\n      ref: el => this.selector = el,\n      id: id\n    }, inputProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      className: labelClassname,\n      htmlFor: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, label))));\n  }\n\n}\n\nCheckboxdone.propTypes = {\n  hasError: PropTypes.bool,\n  id: PropTypes.string.isRequired,\n  indeterminate: PropTypes.bool,\n  label: PropTypes.string.isRequired\n};\nCheckboxdone.defaultProps = {\n  hasError: false,\n  indeterminate: undefined\n};\nexport default Checkboxdone;","map":{"version":3,"sources":["/home/mindbox/Documents/vicky/react-project/nexus project/current project/nexus(28-3-2020-morning)/nexus/src/components/input/Checkbox/chekboxhtml/chekbox.js"],"names":["React","Component","PropTypes","Checkboxdone","componentDidMount","selector","indeterminate","props","componentDidUpdate","prevProps","render","id","label","color","hasError","inputProps","checkboxClassname","inputClassname","type","labelClassname","el","propTypes","bool","string","isRequired","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Checkboxdone extends Component {\n  static propTypes = {\n    hasError: PropTypes.bool,\n    id: PropTypes.string.isRequired,\n    indeterminate: PropTypes.bool,\n    label: PropTypes.string.isRequired,\n  };\n  static defaultProps = {\n    hasError: false,\n    indeterminate: undefined,\n  };\n\n  componentDidMount() {\n    // Apply the indeterminate attribute of the checkbox input\n    this.selector.indeterminate = this.props.indeterminate;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.indeterminate !== this.props.indeterminate) {\n      this.selector.indeterminate = this.props.indeterminate;\n    }\n  }\n    \n    render() {\n\n        const { id, label, color, indeterminate, hasError, ...inputProps } = this.props;\n    const checkboxClassname = `\n    m-checkbox \n     \n      ${hasError && 'm-checkbox--has-error'}\n    `;\n    \n    const inputClassname = `\n      m-checkbox__input\n     \n      ${type === 'switch' && 'm-checkbox--switch__input'}\n      ${hasError && 'm-checkbox--has-error__input'}\n      ${color === 'red' && 'c-red'}\n      ${color === 'orange' && 'c-orange'}\n      ${color === 'yellow' && 'c-yellow'}\n      ${color === 'la-rioja' && 'c-la-rioja'}\n      ${color === 'green' && 'c-green'}\n      ${color === 'pelorous' && 'c-pelorous'}\n      ${color === 'daisy-bush' && 'c-daisy-bush'}\n      ${color === 'violet' && 'c-violet'}\n      ${color === 'mulberry' && 'c-mulberry'}\n      ${color === 'korma' && 'c-korma'}\n      ${color === 'buttercup' && 'c-buttercup'}\n      ${color === 'primary-variant' && 'c-primary-variant'}\n      ${color === 'secondary' && 'c-secondary'}\n      ${color === 'secondary-variant' && 'c-secondary-variant'}\n      ${color === 'dark-bg' && 'c-dark-bg'}\n      ${color === 'dark-bg-variant' && 'c-dark-bg-variant'}\n      ${color === 'black' && 'c-black'}\n       ${color === 'gray' && 'c-gray'}\n      \n\n   \n     \n    `;\n    \n    const labelClassname = `\n      m-checkbox__label\n      ${type === 'switch' && 'm-checkbox--switch__label'}\n    `;\n        return (\n            <>\n               <div className=\"col-md-3\">\n                 <div className={checkboxClassname}>\n                    <input\n                      type=\"checkbox\"\n                      className={inputClassname}\n                      ref={el => (this.selector = el)}\n                      id={id}\n                      {...inputProps}\n                    />\n                      <label className={labelClassname} htmlFor={id}>{label}</label>\n                 </div>\n               </div>\n            </>\n        ); \n    }\n}\n\nexport default Checkboxdone;\n"]},"metadata":{},"sourceType":"module"}