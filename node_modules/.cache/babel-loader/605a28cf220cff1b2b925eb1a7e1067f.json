{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/vicky/react-project/nexus project/current project/nexus(28-3-2020-morning)/nexus/src/components/input/textarea/textarea.js\";\nimport React, { Component } from 'react';\n\nclass textarea extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const textareaLineHeight = 24;\n      const {\n        minRows,\n        maxRows\n      } = this.state;\n      const previousRows = event.target.rows;\n      event.target.rows = minRows; // reset number of rows in textarea \n\n      const currentRows = ~~(event.target.scrollHeight / textareaLineHeight);\n\n      if (currentRows === previousRows) {\n        event.target.rows = currentRows;\n      }\n\n      if (currentRows >= maxRows) {\n        event.target.rows = maxRows;\n        event.target.scrollTop = event.target.scrollHeight;\n      }\n\n      this.setState({\n        value: event.target.value,\n        rows: currentRows < maxRows ? currentRows : maxRows\n      });\n    };\n\n    this.state = {\n      value: '',\n      rows: 5,\n      minRows: 5,\n      maxRows: 10\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      rows: this.state.rows,\n      value: this.state.value,\n      placeholder: 'Enter your text here...',\n      className: 'textarea',\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default textarea;","map":{"version":3,"sources":["/home/mindbox/Documents/vicky/react-project/nexus project/current project/nexus(28-3-2020-morning)/nexus/src/components/input/textarea/textarea.js"],"names":["React","Component","textarea","constructor","props","handleChange","event","textareaLineHeight","minRows","maxRows","state","previousRows","target","rows","currentRows","scrollHeight","scrollTop","setState","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACrB,UAAMA,KAAN;;AADqB,SAUtBC,YAVsB,GAUNC,KAAD,IAAW;AACzB,YAAMC,kBAAkB,GAAG,EAA3B;AACA,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAuB,KAAKC,KAAlC;AAEA,YAAMC,YAAY,GAAGL,KAAK,CAACM,MAAN,CAAaC,IAAlC;AACCP,MAAAA,KAAK,CAACM,MAAN,CAAaC,IAAb,GAAoBL,OAApB,CALwB,CAKK;;AAE9B,YAAMM,WAAW,GAAG,CAAC,EAAER,KAAK,CAACM,MAAN,CAAaG,YAAb,GAA4BR,kBAA9B,CAArB;;AAEE,UAAIO,WAAW,KAAKH,YAApB,EAAkC;AACjCL,QAAAA,KAAK,CAACM,MAAN,CAAaC,IAAb,GAAoBC,WAApB;AACA;;AAEH,UAAIA,WAAW,IAAIL,OAAnB,EAA4B;AAC3BH,QAAAA,KAAK,CAACM,MAAN,CAAaC,IAAb,GAAoBJ,OAApB;AACAH,QAAAA,KAAK,CAACM,MAAN,CAAaI,SAAb,GAAyBV,KAAK,CAACM,MAAN,CAAaG,YAAtC;AACA;;AAEA,WAAKE,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEZ,KAAK,CAACM,MAAN,CAAaM,KADR;AAEXL,QAAAA,IAAI,EAAEC,WAAW,GAAGL,OAAd,GAAwBK,WAAxB,GAAsCL;AAFjC,OAAd;AAID,KAhCqB;;AAErB,SAAKC,KAAL,GAAa;AACZQ,MAAAA,KAAK,EAAE,EADK;AAEZL,MAAAA,IAAI,EAAE,CAFM;AAGZL,MAAAA,OAAO,EAAE,CAHG;AAIZC,MAAAA,OAAO,EAAE;AAJG,KAAb;AAMA;;AAyBEU,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AACb,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWG,IADJ;AAEb,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWQ,KAFL;AAGb,MAAA,WAAW,EAAE,yBAHA;AAIb,MAAA,SAAS,EAAE,UAJE;AAKb,MAAA,QAAQ,EAAE,KAAKb,YALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,CADJ;AAWH;;AA9C4B;;AAiDjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass textarea extends Component {\n    constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue: '',\n\t\t\trows: 5,\n\t\t\tminRows: 5,\n\t\t\tmaxRows: 10,\n\t\t};\n\t}\n\t\n\thandleChange = (event) => {\n\t\tconst textareaLineHeight = 24;\n\t\tconst { minRows, maxRows } = this.state;\n\t\t\n\t\tconst previousRows = event.target.rows;\n  \tevent.target.rows = minRows; // reset number of rows in textarea \n\t\t\n\t\tconst currentRows = ~~(event.target.scrollHeight / textareaLineHeight);\n    \n    if (currentRows === previousRows) {\n    \tevent.target.rows = currentRows;\n    }\n\t\t\n\t\tif (currentRows >= maxRows) {\n\t\t\tevent.target.rows = maxRows;\n\t\t\tevent.target.scrollTop = event.target.scrollHeight;\n\t\t}\n    \n  \tthis.setState({\n    \tvalue: event.target.value,\n      rows: currentRows < maxRows ? currentRows : maxRows,\n    });\n\t};\n    render() {\n        return (\n            <div>\n                \t<textarea\n\t\t\t\trows={this.state.rows}\n\t\t\t\tvalue={this.state.value}\n\t\t\t\tplaceholder={'Enter your text here...'}\n\t\t\t\tclassName={'textarea'}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t/>\n            </div>\n        );\n    }\n}\n\nexport default textarea;"]},"metadata":{},"sourceType":"module"}