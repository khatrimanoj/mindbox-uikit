{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/Dropdown/dropdownsimpal/dropdownsimpal.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass dropdownsimpal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkType = value => {\n      this.setState({\n        typeDropdown: value\n      });\n    };\n\n    this.showDropdown = () => {\n      this.setState({\n        isOpen: true\n      });\n      document.addEventListener(\"click\", this.hideDropdown);\n    };\n\n    this.hideDropdown = () => {\n      this.setState({\n        isOpen: false\n      });\n      document.removeEventListener(\"click\", this.hideDropdown);\n    };\n\n    this.chooseItem = value => {\n      if (this.state.labelItem !== value) {\n        this.setState({\n          labelItem: value\n        });\n      }\n    };\n\n    this.renderDataDropDown = (item, index) => {\n      const {\n        value,\n        label\n      } = this.state.typeDropdown ? {\n        value: index,\n        label: item\n      } : item;\n      return React.createElement(\"li\", {\n        key: index,\n        value: value,\n        onClick: () => this.chooseItem(label),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, label));\n    };\n\n    this.state = {\n      isOpen: false,\n      labelItem: null,\n      typeDropdown: null,\n      search: true\n    };\n  }\n\n  componentWillMount() {\n    const {\n      label\n    } = this.props.list[0];\n    let firstItem = null;\n\n    if (typeof label != 'undefined') {\n      this.checkType(false);\n      firstItem = label;\n    } else {\n      this.checkType(true);\n      firstItem = this.props.list[0];\n    }\n\n    this.setState({\n      labelItem: firstItem\n    });\n  }\n\n  render() {\n    const {\n      list,\n      size,\n      border\n    } = this.props;\n    const dropdownClassname = `\n      dropdown\n      ${size === 'lg' && 'lg-dropdown'}\n      `;\n    const dropdowntoggleclass = `\n      dropdown-toggle\n      ${border === 'false' && 'bordernone'}\n      `;\n    return React.createElement(\"div\", {\n      className: `${dropdownClassname} ${this.state.isOpen ? 'open' : ''}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: dropdowntoggleclass,\n      type: \"button\",\n      onClick: this.showDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.labelItem, React.createElement(\"span\", {\n      className: \"caret\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"dropdown-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, list.map(this.renderDataDropDown)));\n  }\n\n}\n\ndropdownsimpal.propTypes = {\n  list: PropTypes.array.isRequired\n};\ndropdownsimpal.defaultProps = {\n  list: []\n};\nexport default dropdownsimpal;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/Dropdown/dropdownsimpal/dropdownsimpal.js"],"names":["React","Component","PropTypes","dropdownsimpal","constructor","props","checkType","value","setState","typeDropdown","showDropdown","isOpen","document","addEventListener","hideDropdown","removeEventListener","chooseItem","state","labelItem","renderDataDropDown","item","index","label","search","componentWillMount","list","firstItem","render","size","border","dropdownClassname","dropdowntoggleclass","map","propTypes","array","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass dropdownsimpal extends Component {\n \n  static propTypes = {\n    list: PropTypes.array.isRequired\n  };\n  static defaultProps = {\n    list: []\n  };\n  \n  constructor(props) {\n    super(props);    \n    this.state = {\n      isOpen: false,\n      labelItem: null,\n      typeDropdown: null,\n      search: true\n    };\n  }\n\n  componentWillMount() {\n    const { label } = this.props.list[0];\n    let firstItem = null;    \n    if (typeof label != 'undefined') {\n      this.checkType(false);\n      firstItem = label;\n    } else {\n      this.checkType(true);\n      firstItem = this.props.list[0];\n    }        \n    this.setState({\n        labelItem: firstItem\n    });    \n  }\n  checkType = (value) => {\n    this.setState({\n        typeDropdown: value\n    });    \n  };\n  showDropdown = () => {\n    this.setState({ isOpen: true });\n    document.addEventListener(\"click\", this.hideDropdown);\n  };\n  hideDropdown = () => {\n    this.setState({ isOpen: false });\n    document.removeEventListener(\"click\", this.hideDropdown);\n  };\n  chooseItem = (value) => {    \n    if (this.state.labelItem !== value) {\n      this.setState({\n        labelItem: value      \n      })\n    }    \n  };\n  \n  renderDataDropDown = (item, index) => {    \n    const {value, label} = this.state.typeDropdown ? {value: index, label: item} : item;    \n    return (\n      <li\n        key={index}\n        value={value}\n        onClick={() => this.chooseItem(label)}\n      >\n        <a>{label}</a>\n      </li> \n    )\n  };\n    render() {\n     \n      const { list,size,border } = this.props; \n      const dropdownClassname = `\n      dropdown\n      ${size === 'lg' && 'lg-dropdown'}\n      `;   \n      const  dropdowntoggleclass = `\n      dropdown-toggle\n      ${border === 'false' && 'bordernone'}\n      `;   \n     \n        return (\n           <div className={ `${dropdownClassname} ${this.state.isOpen ? 'open' : ''}`}>\n               <button className={dropdowntoggleclass} type=\"button\" onClick={this.showDropdown}>\n                  {this.state.labelItem}\n                 <span className=\"caret\"></span>\n               </button>\n               <ul className=\"dropdown-menu\">\n                 {list.map(this.renderDataDropDown)}\n               </ul>\n           </div>\n        );\n    }\n}\n\nexport default dropdownsimpal;"]},"metadata":{},"sourceType":"module"}