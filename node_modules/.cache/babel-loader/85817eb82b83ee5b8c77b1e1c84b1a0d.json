{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/Types/inputChips.js\";\nimport React, { Component } from 'react';\nimport { Icon } from 'react-icons-kit';\nimport { x } from 'react-icons-kit/feather/x';\nimport { mapPin } from 'react-icons-kit/feather/mapPin';\nconst Default = ['form-group input-chips default-chips left-icon'];\nconst outline = ['form-group input-chips outline-chips left-icon'];\nconst filled = ['form-group input-chips filled-chips left-icon'];\nconst filter = ['', 'disabled', 'focus'];\n\nclass inputChips extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteChips = chipsIndex => {\n      const inputChips = this.state.inputChips;\n      inputChips.splice(chipsIndex, 1);\n      this.setState({\n        inputChips: inputChips\n      });\n    };\n\n    this.state = {\n      inputChips: [{\n        id: 1,\n        Title: 'Enabledxvccxvx'\n      }, {\n        id: 2,\n        Title: 'Disabled',\n        disabled: true\n      }, {\n        id: 3,\n        Title: 'Hover'\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"input-chips-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.inputChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${Default} ${filter[i]}`,\n      key: i,\n      id: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: mapPin,\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: chipsList.Title,\n      disabled: chipsList.disabled,\n      autoFocus: filter[i],\n      readOnly: true,\n      id: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      onClick: () => this.deleteChips(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: x,\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })))), this.state.inputChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${Default} ${filter[i]}`,\n      key: i,\n      id: chipsList.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: mapPin,\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: chipsList.Title,\n      disabled: chipsList.disabled,\n      readOnly: true,\n      id: i.id,\n      className: \"rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      onClick: () => this.deleteChips(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: x,\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.inputChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${outline} ${filter[i]}`,\n      key: i,\n      id: \"outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: mapPin,\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: chipsList.Title,\n      disabled: chipsList.disabled,\n      readOnly: true,\n      id: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      onClick: () => this.deleteChips(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: x,\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })))), this.state.inputChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${outline} ${filter[i]}`,\n      key: i,\n      id: chipsList.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: mapPin,\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: chipsList.Title,\n      disabled: chipsList.disabled,\n      readOnly: true,\n      id: i.id,\n      className: \"rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      onClick: () => this.deleteChips(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: x,\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.inputChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${filled} ${filter[i]}`,\n      key: i,\n      id: \"filled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: mapPin,\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: chipsList.Title,\n      disabled: chipsList.disabled,\n      readOnly: true,\n      id: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      onClick: () => this.deleteChips(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: x,\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })))), this.state.inputChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${filled} ${filter[i]}`,\n      key: i,\n      id: chipsList.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: mapPin,\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: chipsList.Title,\n      disabled: chipsList.disabled,\n      readOnly: true,\n      id: i.id,\n      className: \"rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      onClick: () => this.deleteChips(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: x,\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default inputChips;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/Types/inputChips.js"],"names":["React","Component","Icon","x","mapPin","Default","outline","filled","filter","inputChips","constructor","props","deleteChips","chipsIndex","state","splice","setState","id","Title","disabled","render","map","chipsList","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Icon } from 'react-icons-kit';\nimport {x} from 'react-icons-kit/feather/x';\nimport {mapPin} from 'react-icons-kit/feather/mapPin'\n\nconst Default = ['form-group input-chips default-chips left-icon'];\nconst outline = ['form-group input-chips outline-chips left-icon'];\nconst filled = ['form-group input-chips filled-chips left-icon'];\nconst filter = ['', 'disabled', 'focus'];\n\nclass inputChips extends Component {\n    constructor(props)\n    {\n        super(props)\n        this.state = {\n            inputChips: [\n                {\n                    id: 1,\n                    Title: 'Enabledxvccxvx',\n                },\n                {\n                    id: 2,\n                    Title: 'Disabled',\n                    disabled: true,\n                },\n                {\n                    id: 3,\n                    Title: 'Hover',\n                },\n            ],\n        }\n    }\n\n    deleteChips = (chipsIndex) => {\n        const inputChips = this.state.inputChips;\n\n        inputChips.splice(chipsIndex, 1);\n        this.setState({ inputChips: inputChips });\n    }\n\n    render() {\n        return (\n            <div className=\"input-chips-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"default\">\n                            {this.state.inputChips.map((chipsList, i) => \n                                <div className={`${Default} ${filter[i]}`} key={i} id=\"default\"> \n                                    <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n                                    <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} autoFocus={filter[i]} readOnly id={i.id} />\n                                    <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n                                </div>\n                            )}\n                            {this.state.inputChips.map((chipsList, i) => \n                                <div className={`${Default} ${filter[i]}`} key={i} id={chipsList.id}> \n                                    <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n                                    <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled}  readOnly id={i.id} className=\"rounded\"/>\n                                    <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n                                </div>\n                            )}\n                        </div>\n                    </div> \n                    <div className=\"col-md-4\">\n                        <div className=\"outline\">\n                            {this.state.inputChips.map((chipsList, i) => \n                                <div className={`${outline} ${filter[i]}`} key={i} id=\"outline\"> \n                                    <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n                                    <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} />\n                                    <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n                                </div>\n                            )}\n                            {this.state.inputChips.map((chipsList, i) => \n                                <div className={`${outline} ${filter[i]}`} key={i} id={chipsList.id}> \n                                    <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n                                    <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} className=\"rounded\"/>\n                                    <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                        {this.state.inputChips.map((chipsList, i) => \n                            <div className={`${filled} ${filter[i]}`} key={i} id=\"filled\"> \n                                <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n                                <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} />\n                                <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n                            </div>\n                        )}\n                        {this.state.inputChips.map((chipsList, i) => \n                            <div className={`${filled} ${filter[i]}`} key={i} id={chipsList.id}> \n                                <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n                                <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={chipsList.disabled} readOnly id={i.id} className=\"rounded\"/>\n                                <i className=\"cross-icon\" onClick={()=>this.deleteChips(i)}><Icon icon={x} size={15}/></i>\n                            </div>\n                        )}\n                    </div> \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inputChips;"]},"metadata":{},"sourceType":"module"}