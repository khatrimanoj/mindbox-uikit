{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/vicky/nexus/src/components/Table/tableStriped.js\";\nimport React, { Component } from 'react';\nconst tableHead = [\"Username\", \"E-mail\", \"Status\", \"Revenue\", \"Comment\"];\n\nclass tableStriped extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let itemName = e.target.name;\n      let checked = e.target.checked;\n      this.setState(prevState => {\n        let {\n          list,\n          allChecked\n        } = prevState;\n\n        if (itemName === \"checkAll\") {\n          allChecked = checked;\n          list = list.map(item => ({ ...item,\n            isChecked: checked\n          }));\n        } else {\n          list = list.map(item => item.name === itemName ? { ...item,\n            isChecked: checked\n          } : item);\n          allChecked = list.every(item => item.isChecked);\n        }\n\n        return {\n          list,\n          allChecked\n        };\n      });\n    };\n\n    this.renderList = () => {\n      return this.state.list.map(item => React.createElement(\"tr\", {\n        key: item,\n        className: item.isChecked ? 'bg-white-smoke' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"custom-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: item.id,\n        key: item.id,\n        type: \"checkbox\",\n        name: item.name,\n        value: item.name,\n        checked: item.isChecked,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, item.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, item.emailId), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, item.status), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, item.Revenue), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, item.comment)));\n    };\n\n    this.state = {\n      allChecked: false,\n      list: [{\n        id: 1,\n        name: \"SvenBrand1985\",\n        emailId: \"svenbrand1985@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 1,402.56\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 2,\n        name: \"AlexDavids45\",\n        emailId: \"alexdavids45@email.com\",\n        status: \"Disabled\",\n        Revenue: \"$ 892.46\",\n        comment: \"Brief text comment\",\n        isChecked: false\n      }, {\n        id: 3,\n        name: \"Sandy333\",\n        emailId: \"sandy333@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 873.00\",\n        comment: \"Add comment...\",\n        isChecked: true\n      }, {\n        id: 4,\n        name: \"SveDevonHillnBrand1985\",\n        emailId: \"devonhill@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 401.24\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 5,\n        name: \"EdwardHorton\",\n        emailId: \"edwardhorton@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 302.56\",\n        comment: \"Add comment...\",\n        isChecked: true\n      }, {\n        id: 6,\n        name: \"Megan145\",\n        emailId: \"megan145@email.com\",\n        status: \"Disabled\",\n        Revenue: \"$ 200.01\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 7,\n        name: \"Charles654432\",\n        emailId: \"charles654432@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 104.80\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }, {\n        id: 8,\n        name: \"AnnSmith\",\n        emailId: \"annsmith@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 98.15\",\n        comment: \"Add comment...\",\n        isChecked: false\n      }]\n    }; // sorting code\n\n    this.compareBy.bind(this);\n    this.sortBy.bind(this);\n  } // sorting code\n\n\n  compareBy(key) {\n    return function (a, b) {\n      if (a[key] < b[key]) return -1;\n      if (a[key] > b[key]) return 1;\n      return 0;\n    };\n  } // sorting code\n\n\n  sortBy(key) {\n    let arrayCopy = [...this.state.list];\n    arrayCopy.sort(this.compareBy(key));\n    this.setState({\n      list: arrayCopy\n    });\n  } // checkbox select row code\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"table-responsive bordered-table mb-60\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Table Header\"), React.createElement(\"div\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sort-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dots-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))), React.createElement(\"table\", {\n      className: \"table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        width: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"all\",\n      name: \"checkAll\",\n      checked: this.state.allChecked,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))), tableHead.map(data =>\n    /* sorting code  */\n    React.createElement(\"th\", {\n      className: \"text-gray text-left\",\n      onClick: () => this.sortBy(data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, data)))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.renderList())));\n  }\n\n}\n\nexport default tableStriped;","map":{"version":3,"sources":["/home/mindbox/Documents/vicky/nexus/src/components/Table/tableStriped.js"],"names":["React","Component","tableHead","tableStriped","constructor","props","handleChange","e","itemName","target","name","checked","setState","prevState","list","allChecked","map","item","isChecked","every","renderList","state","id","emailId","status","Revenue","comment","compareBy","bind","sortBy","key","a","b","arrayCopy","sort","render","width","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,SAAS,GAAG,CAAC,UAAD,EAAa,QAAb,EAAuB,QAAvB,EAAiC,SAAjC,EAA4C,SAA5C,CAAlB;;AACA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmGnBC,YAnGmB,GAmGJC,CAAC,IAAI;AAChB,UAAIC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAxB;AACA,UAAIC,OAAO,GAAGJ,CAAC,CAACE,MAAF,CAASE,OAAvB;AACA,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,YAAI;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAuBF,SAA3B;;AACA,YAAIL,QAAQ,KAAK,UAAjB,EAA6B;AACzBO,UAAAA,UAAU,GAAGJ,OAAb;AACAG,UAAAA,IAAI,GAAGA,IAAI,CAACE,GAAL,CAASC,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWC,YAAAA,SAAS,EAAEP;AAAtB,WAAL,CAAb,CAAP;AACH,SAHD,MAGO;AACHG,UAAAA,IAAI,GAAGA,IAAI,CAACE,GAAL,CAASC,IAAI,IAChBA,IAAI,CAACP,IAAL,KAAcF,QAAd,GAAyB,EAAE,GAAGS,IAAL;AAAWC,YAAAA,SAAS,EAAEP;AAAtB,WAAzB,GAA2DM,IADxD,CAAP;AAGAF,UAAAA,UAAU,GAAGD,IAAI,CAACK,KAAL,CAAWF,IAAI,IAAIA,IAAI,CAACC,SAAxB,CAAb;AACH;;AACD,eAAO;AAAEJ,UAAAA,IAAF;AAAQC,UAAAA;AAAR,SAAP;AACH,OAZD;AAaH,KAnHkB;;AAAA,SAqHnBK,UArHmB,GAqHN,MAAM;AACf,aAAO,KAAKC,KAAL,CAAWP,IAAX,CAAgBE,GAAhB,CAAoBC,IAAI,IAC3B;AAAI,QAAA,GAAG,EAAEA,IAAT;AAAe,QAAA,SAAS,EAAEA,IAAI,CAACC,SAAL,GAAiB,gBAAjB,GAAoC,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,EAAE,EAAED,IAAI,CAACK,EADb;AAEI,QAAA,GAAG,EAAEL,IAAI,CAACK,EAFd;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,IAAI,EAAEL,IAAI,CAACP,IAJf;AAKI,QAAA,KAAK,EAAEO,IAAI,CAACP,IALhB;AAMI,QAAA,OAAO,EAAEO,IAAI,CAACC,SANlB;AAOI,QAAA,QAAQ,EAAE,KAAKZ,YAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAUI;AAAO,QAAA,GAAG,EAAEW,IAAI,CAACK,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CAFJ,CADJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,IAAI,CAACP,IAAV,CAhBJ,EAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKO,IAAI,CAACM,OAAV,CAjBJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKN,IAAI,CAACO,MAAV,CAlBJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKP,IAAI,CAACQ,OAAV,CAnBJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKR,IAAI,CAACS,OAAV,CApBJ,CADG,CAAP;AAwBH,KA9IkB;;AAEf,SAAKL,KAAL,GAAa;AACTN,MAAAA,UAAU,EAAE,KADH;AAETD,MAAAA,IAAI,EAAE,CACF;AACIQ,QAAAA,EAAE,EAAE,CADR;AAEIZ,QAAAA,IAAI,EAAE,eAFV;AAGIa,QAAAA,OAAO,EAAE,yBAHb;AAIIC,QAAAA,MAAM,EAAE,QAJZ;AAKIC,QAAAA,OAAO,EAAE,YALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIR,QAAAA,SAAS,EAAE;AAPf,OADE,EAUF;AACII,QAAAA,EAAE,EAAE,CADR;AAEIZ,QAAAA,IAAI,EAAE,cAFV;AAGIa,QAAAA,OAAO,EAAE,wBAHb;AAIIC,QAAAA,MAAM,EAAE,UAJZ;AAKIC,QAAAA,OAAO,EAAE,UALb;AAMIC,QAAAA,OAAO,EAAE,oBANb;AAOIR,QAAAA,SAAS,EAAE;AAPf,OAVE,EAmBF;AACII,QAAAA,EAAE,EAAE,CADR;AAEIZ,QAAAA,IAAI,EAAE,UAFV;AAGIa,QAAAA,OAAO,EAAE,oBAHb;AAIIC,QAAAA,MAAM,EAAE,QAJZ;AAKIC,QAAAA,OAAO,EAAE,UALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIR,QAAAA,SAAS,EAAE;AAPf,OAnBE,EA4BF;AACII,QAAAA,EAAE,EAAE,CADR;AAEIZ,QAAAA,IAAI,EAAE,wBAFV;AAGIa,QAAAA,OAAO,EAAE,qBAHb;AAIIC,QAAAA,MAAM,EAAE,QAJZ;AAKIC,QAAAA,OAAO,EAAE,UALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIR,QAAAA,SAAS,EAAE;AAPf,OA5BE,EAqCF;AACII,QAAAA,EAAE,EAAE,CADR;AAEIZ,QAAAA,IAAI,EAAE,cAFV;AAGIa,QAAAA,OAAO,EAAE,wBAHb;AAIIC,QAAAA,MAAM,EAAE,QAJZ;AAKIC,QAAAA,OAAO,EAAE,UALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIR,QAAAA,SAAS,EAAE;AAPf,OArCE,EA8CF;AACII,QAAAA,EAAE,EAAE,CADR;AAEIZ,QAAAA,IAAI,EAAE,UAFV;AAGIa,QAAAA,OAAO,EAAE,oBAHb;AAIIC,QAAAA,MAAM,EAAE,UAJZ;AAKIC,QAAAA,OAAO,EAAE,UALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIR,QAAAA,SAAS,EAAE;AAPf,OA9CE,EAuDF;AACII,QAAAA,EAAE,EAAE,CADR;AAEIZ,QAAAA,IAAI,EAAE,eAFV;AAGIa,QAAAA,OAAO,EAAE,yBAHb;AAIIC,QAAAA,MAAM,EAAE,QAJZ;AAKIC,QAAAA,OAAO,EAAE,UALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIR,QAAAA,SAAS,EAAE;AAPf,OAvDE,EAgEF;AACII,QAAAA,EAAE,EAAE,CADR;AAEIZ,QAAAA,IAAI,EAAE,UAFV;AAGIa,QAAAA,OAAO,EAAE,oBAHb;AAIIC,QAAAA,MAAM,EAAE,QAJZ;AAKIC,QAAAA,OAAO,EAAE,SALb;AAMIC,QAAAA,OAAO,EAAE,gBANb;AAOIR,QAAAA,SAAS,EAAE;AAPf,OAhEE;AAFG,KAAb,CAFe,CA+Ef;;AACA,SAAKS,SAAL,CAAeC,IAAf,CAAoB,IAApB;AACA,SAAKC,MAAL,CAAYD,IAAZ,CAAiB,IAAjB;AACH,GAnFgC,CAoFjC;;;AACAD,EAAAA,SAAS,CAACG,GAAD,EAAM;AACX,WAAO,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACvB,UAAID,CAAC,CAACD,GAAD,CAAD,GAASE,CAAC,CAACF,GAAD,CAAd,EAAqB,OAAO,CAAC,CAAR;AACrB,UAAIC,CAAC,CAACD,GAAD,CAAD,GAASE,CAAC,CAACF,GAAD,CAAd,EAAqB,OAAO,CAAP;AACrB,aAAO,CAAP;AACC,KAJD;AAKH,GA3FgC,CA4FjC;;;AACAD,EAAAA,MAAM,CAACC,GAAD,EAAM;AACR,QAAIG,SAAS,GAAG,CAAC,GAAG,KAAKZ,KAAL,CAAWP,IAAf,CAAhB;AACAmB,IAAAA,SAAS,CAACC,IAAV,CAAe,KAAKP,SAAL,CAAeG,GAAf,CAAf;AACA,SAAKlB,QAAL,CAAc;AAACE,MAAAA,IAAI,EAAEmB;AAAP,KAAd;AACH,GAjGgC,CAmGjC;;;AA6CAE,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFJ,CADJ,EAWI;AAAO,MAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AACI,MAAA,EAAE,EAAC,KADP;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,OAAO,EAAE,KAAKf,KAAL,CAAWN,UAHxB;AAII,MAAA,QAAQ,EAAE,KAAKT,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AAAO,MAAA,GAAG,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAFJ,CADJ,EAYKJ,SAAS,CAACc,GAAV,CAAcqB,IAAI;AACf;AACA;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAoC,MAAA,OAAO,EAAE,MAAM,KAAKR,MAAL,CAAYQ,IAAZ,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuEA,IAAvE,CAFH,CAZL,CADJ,CADJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKjB,UAAL,EADL,CApBJ,CAXJ,CADJ;AAsCH;;AAvLgC;;AA0LrC,eAAejB,YAAf","sourcesContent":["import React, { Component } from 'react';\n\nconst tableHead = [\"Username\", \"E-mail\", \"Status\", \"Revenue\", \"Comment\"];\nclass tableStriped extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allChecked: false,\n            list: [\n                {\n                    id: 1,\n                    name: \"SvenBrand1985\",\n                    emailId: \"svenbrand1985@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 1,402.56\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 2,\n                    name: \"AlexDavids45\",\n                    emailId: \"alexdavids45@email.com\",\n                    status: \"Disabled\",\n                    Revenue: \"$ 892.46\",\n                    comment: \"Brief text comment\",\n                    isChecked: false\n                },\n                {\n                    id: 3,\n                    name: \"Sandy333\",\n                    emailId: \"sandy333@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 873.00\",\n                    comment: \"Add comment...\",\n                    isChecked: true\n                },\n                {\n                    id: 4,\n                    name: \"SveDevonHillnBrand1985\",\n                    emailId: \"devonhill@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 401.24\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 5,\n                    name: \"EdwardHorton\",\n                    emailId: \"edwardhorton@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 302.56\",\n                    comment: \"Add comment...\",\n                    isChecked: true\n                },\n                {\n                    id: 6,\n                    name: \"Megan145\",\n                    emailId: \"megan145@email.com\",\n                    status: \"Disabled\",\n                    Revenue: \"$ 200.01\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 7,\n                    name: \"Charles654432\",\n                    emailId: \"charles654432@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 104.80\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n                {\n                    id: 8,\n                    name: \"AnnSmith\",\n                    emailId: \"annsmith@email.com\",\n                    status: \"Active\",\n                    Revenue: \"$ 98.15\",\n                    comment: \"Add comment...\",\n                    isChecked: false\n                },\n            ]\n        };\n        // sorting code\n        this.compareBy.bind(this);\n        this.sortBy.bind(this);\n    }\n    // sorting code\n    compareBy(key) {\n        return function (a, b) {\n        if (a[key] < b[key]) return -1;\n        if (a[key] > b[key]) return 1;\n        return 0;\n        };\n    }\n    // sorting code\n    sortBy(key) {\n        let arrayCopy = [...this.state.list];\n        arrayCopy.sort(this.compareBy(key));\n        this.setState({list: arrayCopy});\n    }\n\n    // checkbox select row code\n    handleChange = e => {\n        let itemName = e.target.name;\n        let checked = e.target.checked;\n        this.setState(prevState => {\n            let { list, allChecked } = prevState;\n            if (itemName === \"checkAll\") {\n                allChecked = checked;\n                list = list.map(item => ({ ...item, isChecked: checked }));\n            } else {\n                list = list.map(item =>\n                    item.name === itemName ? { ...item, isChecked: checked } : item\n                );\n                allChecked = list.every(item => item.isChecked);\n            }\n            return { list, allChecked };\n        });\n    };\n\n    renderList = () => {\n        return this.state.list.map(item => (\n            <tr key={item} className={item.isChecked ? 'bg-white-smoke' : '' }>\n                <td>\n                    {/* checkbox select row code  */}\n                    <div className=\"custom-checkbox\">\n                        <input\n                            id={item.id}\n                            key={item.id}\n                            type=\"checkbox\"\n                            name={item.name}\n                            value={item.name}\n                            checked={item.isChecked}\n                            onChange={this.handleChange}\n                        />\n                        <label for={item.id}></label>\n                    </div>\n                </td>\n                <td>{item.name}</td>\n                <td>{item.emailId}</td>\n                <td>{item.status}</td>\n                <td>{item.Revenue}</td>\n                <td>{item.comment}</td>\n            </tr>\n        ));\n    };\n    render() {\n        return (\n            <div className=\"table-responsive bordered-table mb-60\">\n                <div className=\"table-header\">\n                    <div className=\"h6\">Table Header</div>\n                    <div className=\"button\">\n                        <div className=\"sort-icon\">\n                    \n                        </div>\n                        <div className=\"dots-icon\">\n                    </div>\n                    </div>\n                </div>\n                <table className=\"table-striped\">\n                    <thead>\n                        <tr>\n                            <th style={{ width: \"20px\" }}>\n                               { /* checkbox select row code  */}\n                                <div className=\"custom-checkbox\">\n                                    <input type=\"checkbox\"\n                                        id=\"all\"\n                                        name=\"checkAll\"\n                                        checked={this.state.allChecked}\n                                        onChange={this.handleChange}/>\n                                    <label for=\"all\"></label>      \n                                </div>\n                            </th>\n                            {tableHead.map(data => (\n                                /* sorting code  */\n                                <th className=\"text-gray text-left\" onClick={() => this.sortBy(data)}>{data}</th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderList()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n\n}\nexport default tableStriped;\n"]},"metadata":{},"sourceType":"module"}