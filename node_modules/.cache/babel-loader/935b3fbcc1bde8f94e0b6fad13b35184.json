{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/Types/Tags.js\";\nimport React, { Component } from 'react';\nconst Default = ['form-group default-tags'];\nconst outline = ['form-group outline-tags'];\nconst filled = ['form-group filled-tags'];\nconst filter = ['default', 'focus'];\nconst colorDefault = ['form-group color color-default'];\nconst colorOutline = ['form-group color color-outline'];\nconst numTag = [\"form-group number\"];\n\nclass Tags extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tags: [{\n        id: 1,\n        Title: 'Enabled'\n      }, {\n        id: 2,\n        Title: 'Hover'\n      }],\n      color: [{\n        id: 1,\n        Title: \"Red\"\n      }, {\n        id: 2,\n        Title: \"Green\"\n      }, {\n        id: 3,\n        Title: \"Blue\"\n      }],\n      number: [{\n        id: 1,\n        Title: \"+10\",\n        class: \"red\"\n      }, {\n        id: 2,\n        Title: \"5\",\n        class: \"yellow\"\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"input-chips-wrapper tags-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.tags.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${outline}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: filter[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })))), this.state.tags.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${outline}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: `${filter[i]} rounded`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.tags.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${Default}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: filter[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })))), this.state.tags.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${Default}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: `${filter[i]} rounded`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.tags.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${filled}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: filter[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })))), this.state.tags.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${filled}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: `${filter[i]} rounded`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.color.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${colorOutline} color`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: chipsList.Title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.state.color.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${colorOutline} color`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: `${chipsList.Title} rounded`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))))))), React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.state.color.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${colorDefault} color`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: chipsList.Title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.state.color.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${colorDefault} color`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: `${chipsList.Title} rounded`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"number-tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.number.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${numTag} color`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: `${chipsList.class}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \" \", chipsList.Title, React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"radio\",\n      id: i.id,\n      className: chipsList.class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nexport default Tags;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/Types/Tags.js"],"names":["React","Component","Default","outline","filled","filter","colorDefault","colorOutline","numTag","Tags","constructor","props","state","tags","id","Title","color","number","class","render","map","chipsList","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nconst Default = ['form-group default-tags'];\nconst outline = ['form-group outline-tags'];\nconst filled = ['form-group filled-tags'];\nconst filter = ['default', 'focus'];\nconst colorDefault = ['form-group color color-default'];\nconst colorOutline = ['form-group color color-outline'];\nconst numTag = [\"form-group number\"];\nclass Tags extends Component {\n    constructor(props)\n    {\n        super(props)\n        this.state = {\n            tags: [\n                {\n                    id: 1,\n                    Title: 'Enabled',\n                },\n                {\n                    id: 2,\n                    Title: 'Hover',\n                },\n            ],\n            color: [\n                {\n                    id: 1,\n                    Title: \"Red\"\n                },\n\n                {\n                    id: 2,\n                    Title: \"Green\"\n                },\n\n                {\n                    id: 3,\n                    Title: \"Blue\"\n                }\n            ],\n            number: [\n                {\n                    id: 1,\n                    Title: \"+10\",\n                    class: \"red\"\n                },\n                {\n                    id: 2,\n                    Title: \"5\",\n                    class: \"yellow\"\n                }\n            ]\n        }\n    }\n    render() {\n        return (\n            <div className=\"input-chips-wrapper tags-list\">\n                <div className=\"row\">\n                    <div className=\"col-md-2\">\n                        <div className=\"flex-div\">\n                            {this.state.tags.map((chipsList, i) => \n                                <div className={`${outline}`} key={i}> \n                                    <label className={filter[i]}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                            {this.state.tags.map((chipsList, i) => \n                                <div className={`${outline}`} key={i}> \n                                    <label className={`${filter[i]} rounded`}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"col-md-2\">\n                        <div className=\"flex-div\">\n                            {this.state.tags.map((chipsList, i) => \n                                <div className={`${Default}`} key={i}> \n                                    <label className={filter[i]}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                            {this.state.tags.map((chipsList, i) => \n                                <div className={`${Default}`} key={i}> \n                                    <label className={`${filter[i]} rounded`}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                        </div>\n                    </div>  \n                    <div className=\"col-md-2\">\n                        <div className=\"flex-div\">\n                            {this.state.tags.map((chipsList, i) => \n                                <div className={`${filled}`} key={i}> \n                                    <label className={filter[i]}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                            {this.state.tags.map((chipsList, i) => \n                                <div className={`${filled}`} key={i}> \n                                    <label className={`${filter[i]} rounded`}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                        </div>\n                    </div>  \n                    <div className=\"col-md-2\">\n                        <div className=\"flex-div\">\n                            {this.state.color.map((chipsList, i) => \n                                <div className={`${colorOutline} color`} key={i}> \n                                    <label className={chipsList.Title}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                            <div>\n                            {this.state.color.map((chipsList, i) => \n                                <div className={`${colorOutline} color`} key={i}> \n                                    <label className={`${chipsList.Title} rounded`}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}</div>\n                        </div>\n                    </div>  \n                    <div className=\"col-md-3\">\n                        <div className=\"flex-div\">\n                            {this.state.color.map((chipsList, i) => \n                                <div className={`${colorDefault} color`} key={i}> \n                                    <label className={chipsList.Title}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}\n                            <div>\n                            {this.state.color.map((chipsList, i) => \n                                <div className={`${colorDefault} color`} key={i}> \n                                    <label className={`${chipsList.Title} rounded`}> {chipsList.Title}\n                                        <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                    </label>\n                                </div>\n                            )}</div>\n                            <div className=\"number-tag\">\n                                {this.state.number.map((chipsList, i) => \n                                    <div className={`${numTag} color`} key={i}> \n                                        <label className={`${chipsList.class}`}> {chipsList.Title}\n                                            <input name=\"selection\" type=\"radio\" id={i.id} className={chipsList.class}/>\n                                        </label>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>  \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tags;"]},"metadata":{},"sourceType":"module"}