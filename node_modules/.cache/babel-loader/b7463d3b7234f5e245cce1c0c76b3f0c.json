{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/inputChips.js\";\nimport React, { Component } from 'react';\nimport { Icon } from 'react-icons-kit';\nimport { x } from 'react-icons-kit/feather/x';\nimport { mapPin } from 'react-icons-kit/feather/mapPin';\nconst Default = ['form-group input-chips default-chips left-icon'];\nconst outline = ['form-group input-chips outline-chips left-icon'];\nconst filled = ['form-group input-chips filled-chips left-icon'];\nconst filter = ['', 'disbaled', 'hover'];\n\nclass inputChips extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputChips: [{\n        id: 1,\n        Title: 'Enabled'\n      }, {\n        id: 2,\n        Title: 'Disabled'\n      }, {\n        id: 3,\n        Title: 'Hover'\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"input-chips-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.inputChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${Default} ${filter}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: mapPin,\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: chipsList.Title,\n      disabled: filter[i],\n      readOnly: true,\n      id: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: x,\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })))), this.state.inputChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${Default} ${filter}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: mapPin,\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: chipsList.Title,\n      disabled: filter[i],\n      readOnly: true,\n      id: i.id,\n      className: \"rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: x,\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.inputChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${outline} ${filter}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: mapPin,\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: chipsList.Title,\n      disabled: filter[i],\n      readOnly: true,\n      id: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: x,\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })))), this.state.inputChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${outline} ${filter}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: mapPin,\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: chipsList.Title,\n      disabled: filter[i],\n      readOnly: true,\n      id: i.id,\n      className: \"rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: x,\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.inputChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${filled} ${filter}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: mapPin,\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: chipsList.Title,\n      disabled: filter[i],\n      readOnly: true,\n      id: i.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: x,\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })))), this.state.inputChips.map((chipsList, i) => React.createElement(\"div\", {\n      className: `${filled} ${filter}`,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"inputicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: mapPin,\n      size: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      name: \"selection\",\n      type: \"text\",\n      value: chipsList.Title,\n      disabled: filter[i],\n      readOnly: true,\n      id: i.id,\n      className: \"rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: \"cross-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: x,\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default inputChips;","map":{"version":3,"sources":["/home/mindbox/Documents/manoj/nexus/src/components/ChipsTags/inputChips.js"],"names":["React","Component","Icon","x","mapPin","Default","outline","filled","filter","inputChips","constructor","props","state","id","Title","render","map","chipsList","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Icon } from 'react-icons-kit';\nimport {x} from 'react-icons-kit/feather/x';\nimport {mapPin} from 'react-icons-kit/feather/mapPin'\n\nconst Default = ['form-group input-chips default-chips left-icon'];\nconst outline = ['form-group input-chips outline-chips left-icon'];\nconst filled = ['form-group input-chips filled-chips left-icon'];\nconst filter = ['', 'disbaled', 'hover'];\n\nclass inputChips extends Component {\n    constructor(props)\n    {\n        super(props)\n        this.state = {\n            inputChips: [\n                {\n                    id: 1,\n                    Title: 'Enabled',\n                },\n                {\n                    id: 2,\n                    Title: 'Disabled',\n                },\n                {\n                    id: 3,\n                    Title: 'Hover',\n                },\n            ],\n        }\n    }\n    render() {\n        return (\n            <div className=\"input-chips-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"default\">\n                            {this.state.inputChips.map((chipsList, i) => \n                                <div className={`${Default} ${filter}`} key={i}> \n                                    <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n                                    <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={filter[i]}  readOnly id={i.id} />\n                                    <i className=\"cross-icon\"><Icon icon={x} size={15}/></i>\n                                </div>\n                            )}\n                            {this.state.inputChips.map((chipsList, i) => \n                                <div className={`${Default} ${filter}`} key={i}> \n                                    <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n                                    <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={filter[i]}  readOnly id={i.id} className=\"rounded\"/>\n                                    <i className=\"cross-icon\"><Icon icon={x} size={15}/></i>\n                                </div>\n                            )}\n                        </div>\n                    </div> \n                    <div className=\"col-md-4\">\n                        <div className=\"outline\">\n                            {this.state.inputChips.map((chipsList, i) => \n                                <div className={`${outline} ${filter}`} key={i}> \n                                    <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n                                    <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={filter[i]} readOnly id={i.id} />\n                                    <i className=\"cross-icon\"><Icon icon={x} size={15}/></i>\n                                </div>\n                            )}\n                            {this.state.inputChips.map((chipsList, i) => \n                                <div className={`${outline} ${filter}`} key={i}> \n                                    <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n                                    <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={filter[i]} readOnly id={i.id} className=\"rounded\"/>\n                                    <i className=\"cross-icon\"><Icon icon={x} size={15}/></i>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                        {this.state.inputChips.map((chipsList, i) => \n                            <div className={`${filled} ${filter}`} key={i}> \n                                <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n                                <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={filter[i]} readOnly id={i.id} />\n                                <i className=\"cross-icon\"><Icon icon={x} size={15}/></i>\n                            </div>\n                        )}\n                        {this.state.inputChips.map((chipsList, i) => \n                            <div className={`${filled} ${filter}`} key={i}> \n                                <i className=\"inputicon\"><Icon icon={mapPin} size={16} /></i>\n                                <input name=\"selection\" type=\"text\" value={chipsList.Title} disabled={filter[i]} readOnly id={i.id} className=\"rounded\"/>\n                                <i className=\"cross-icon\"><Icon icon={x} size={15}/></i>\n                            </div>\n                        )}\n                    </div> \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inputChips;"]},"metadata":{},"sourceType":"module"}