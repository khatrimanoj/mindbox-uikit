{"ast":null,"code":"var _jsxFileName = \"/home/mindbox/Documents/vicky/nexus/src/components/Table/tableStriped.js\";\nimport React, { Component } from 'react';\n\nfunction CheckBox({\n  id,\n  name,\n  value,\n  tick,\n  onCheck\n}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: id,\n    name: name,\n    type: \"checkbox\",\n    value: value,\n    checked: tick || false,\n    onChange: onCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    for: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), \"   \") // <label>\n  //     <input\n  //         name={name}\n  //         type=\"checkbox\"\n  //         value={value}\n  //         checked={tick || false}\n  //         onChange={onCheck}\n  //     />\n  //     {value}\n  // </label>\n  ;\n}\n\nfunction CheckBoxList({\n  options,\n  isSelectedAll,\n  onCheck\n}) {\n  const checkBoxOptions = React.createElement(\"div\", {\n    className: \"checkbox-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, options.map((option, index) => {\n    return React.createElement(CheckBox, {\n      key: index,\n      name: option.name,\n      value: option.value,\n      tick: option.checked,\n      onCheck: e => onCheck(option.value, e.target.checked),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }));\n  return React.createElement(\"div\", {\n    className: \"checkbox-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CheckBox, {\n    name: \"select-all\",\n    value: \"ALL\",\n    tick: isSelectedAll,\n    onCheck: e => onCheck('all', e.target.checked),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), checkBoxOptions);\n}\n\nconst tableHead = [\"Username\", \"E-mail\", \"Status\", \"Revenue\", \"Comment\"];\n\nclass tableStriped extends Component {\n  constructor(props) {\n    super(props); //since we are extending class Table so we have to use super in order to override Component class constructor\n\n    this.state = {\n      //state is by default an object\n      isSelectedAll: false,\n      tableData: [{\n        id: 1,\n        userName: \"SvenBrand1985\",\n        emailId: \"svenbrand1985@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 1,402.56\",\n        comment: \"Add comment...\"\n      }, {\n        id: 2,\n        userName: \"AlexDavids45\",\n        emailId: \"alexdavids45@email.com\",\n        status: \"Disabled\",\n        Revenue: \"$ 892.46\",\n        comment: \"Brief text comment\"\n      }, {\n        id: 3,\n        userName: \"Sandy333\",\n        emailId: \"sandy333@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 873.00\",\n        comment: \"Add comment...\"\n      }, {\n        id: 4,\n        userName: \"SveDevonHillnBrand1985\",\n        emailId: \"devonhill@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 401.24\",\n        comment: \"Add comment...\"\n      }, {\n        id: 5,\n        userName: \"EdwardHorton\",\n        emailId: \"edwardhorton@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 302.56\",\n        comment: \"Add comment...\"\n      }, {\n        id: 6,\n        userName: \"Megan145\",\n        emailId: \"megan145@email.com\",\n        status: \"Disabled\",\n        Revenue: \"$ 200.01\",\n        comment: \"Add comment...\"\n      }, {\n        id: 7,\n        userName: \"Charles654432\",\n        emailId: \"charles654432@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 104.80\",\n        comment: \"Add comment...\"\n      }, {\n        id: 8,\n        userName: \"AnnSmith\",\n        emailId: \"annsmith@email.com\",\n        status: \"Active\",\n        Revenue: \"$ 98.15\",\n        comment: \"Add comment...\"\n      }],\n      tableHead\n    };\n  }\n\n  onCheckBoxChange(checkName, isSelected) {\n    let isAllChecked = checkName === 'all' && isSelected;\n    let isAllUnChecked = checkName === 'all' && !isSelected;\n    const checked = isSelected;\n    const checkList = this.state.checkList.map((color, index) => {\n      if (isAllChecked || color.value === checkName) {\n        return Object.assign({}, color, {\n          checked\n        });\n      } else if (isAllUnChecked) {\n        return Object.assign({}, color, {\n          checked: false\n        });\n      }\n\n      return color;\n    });\n    let isCheckedAll = checkList.findIndex(item => item.checked === false) === -1 || isAllChecked;\n    this.setState({\n      checkList,\n      isCheckedAll\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"table-responsive bordered-table mb-60\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Table Header\"), React.createElement(\"div\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sort-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dots-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), React.createElement(\"table\", {\n      className: \"table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        width: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(CheckBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))), tableHead.map(data => React.createElement(\"th\", {\n      key: data,\n      className: \"text-gray text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, data)))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.tableData.map((data, i) => {\n      return React.createElement(\"tr\", {\n        key: data.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        key: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(CheckBoxList, {\n        options: this.state.checkList,\n        isCheckedAll: this.state.isCheckedAll,\n        onCheck: this.onCheckBoxChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, data.userName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, data.emailId), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, data.status), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, data.Revenue), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, data.comment));\n    }))));\n  }\n\n}\n\nexport default tableStriped;","map":{"version":3,"sources":["/home/mindbox/Documents/vicky/nexus/src/components/Table/tableStriped.js"],"names":["React","Component","CheckBox","id","name","value","tick","onCheck","CheckBoxList","options","isSelectedAll","checkBoxOptions","map","option","index","checked","e","target","tableHead","tableStriped","constructor","props","state","tableData","userName","emailId","status","Revenue","comment","onCheckBoxChange","checkName","isSelected","isAllChecked","isAllUnChecked","checkList","color","Object","assign","isCheckedAll","findIndex","item","setState","render","width","data","i","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nfunction CheckBox({id,name, value, tick, onCheck}) {\n  return (\n      <><input type=\"checkbox\" id={id} name={name}\n                type=\"checkbox\"\n                value={value}\n                checked={tick || false}\n                onChange={onCheck}/>\n      <label for={id}></label>   </>\n        // <label>\n        //     <input\n        //         name={name}\n        //         type=\"checkbox\"\n        //         value={value}\n        //         checked={tick || false}\n        //         onChange={onCheck}\n        //     />\n        //     {value}\n        // </label>\n    );\n}\nfunction CheckBoxList ({options, isSelectedAll, onCheck}) {\n    const checkBoxOptions = (\n        <div className=\"checkbox-list\">\n            {options.map((option, index) => {\n                return (\n                    <CheckBox key={index} name={option.name} value={option.value} tick={option.checked} onCheck={(e) => onCheck(option.value, e.target.checked)} />\n                );\n            })}\n        </div>\n    );\n    return (\n        <div className=\"checkbox-list\">\n            <CheckBox name=\"select-all\" value=\"ALL\" tick={isSelectedAll} onCheck={(e) => onCheck('all', e.target.checked)} />\n            {checkBoxOptions}\n        </div>\n    );\n}\nconst tableHead = [\"Username\", \"E-mail\", \"Status\", \"Revenue\", \"Comment\"];\nclass tableStriped extends Component {\n    constructor(props) {\n      super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n      this.state = { //state is by default an object\n          isSelectedAll: false,\n          tableData: [\n              {\n                  id: 1,\n                  userName: \"SvenBrand1985\",\n                  emailId: \"svenbrand1985@email.com\",\n                  status: \"Active\",\n                  Revenue: \"$ 1,402.56\",\n                  comment: \"Add comment...\"\n              },\n              {\n                  id: 2,\n                  userName: \"AlexDavids45\",\n                  emailId: \"alexdavids45@email.com\",\n                  status: \"Disabled\",\n                  Revenue: \"$ 892.46\",\n                  comment: \"Brief text comment\"\n              },\n              {\n                  id: 3,\n                  userName: \"Sandy333\",\n                  emailId: \"sandy333@email.com\",\n                  status: \"Active\",\n                  Revenue: \"$ 873.00\",\n                  comment: \"Add comment...\"\n              },\n              {\n                  id: 4,\n                  userName: \"SveDevonHillnBrand1985\",\n                  emailId: \"devonhill@email.com\",\n                  status: \"Active\",\n                  Revenue: \"$ 401.24\",\n                  comment: \"Add comment...\"\n              },\n              {\n                  id: 5,\n                  userName: \"EdwardHorton\",\n                  emailId: \"edwardhorton@email.com\",\n                  status: \"Active\",\n                  Revenue: \"$ 302.56\",\n                  comment: \"Add comment...\"\n              },\n              {\n                  id: 6,\n                  userName: \"Megan145\",\n                  emailId: \"megan145@email.com\",\n                  status: \"Disabled\",\n                  Revenue: \"$ 200.01\",\n                  comment: \"Add comment...\"\n              },\n              {\n                  id: 7,\n                  userName: \"Charles654432\",\n                  emailId: \"charles654432@email.com\",\n                  status: \"Active\",\n                  Revenue: \"$ 104.80\",\n                  comment: \"Add comment...\"\n              },\n              {\n                  id: 8,\n                  userName: \"AnnSmith\",\n                  emailId: \"annsmith@email.com\",\n                  status: \"Active\",\n                  Revenue: \"$ 98.15\",\n                  comment: \"Add comment...\"\n              },\n          ],\n          tableHead,\n        };\n    };\n\n  onCheckBoxChange(checkName, isSelected) {\n      let isAllChecked = (checkName === 'all' && isSelected);\n      let isAllUnChecked = (checkName === 'all' && !isSelected);\n      const checked = isSelected;\n      const checkList = this.state.checkList.map((color, index) => {\n          if(isAllChecked || color.value === checkName) {\n              return Object.assign({}, color, {\n                  checked,\n              });\n          } else if (isAllUnChecked) {\n              return Object.assign({}, color, {\n                  checked: false,\n              });\n          }\n          return color;\n      });\n      let isCheckedAll = (checkList.findIndex((item) => item.checked === false) === -1) || isAllChecked;\n      this.setState({\n          checkList,\n          isCheckedAll,\n      });\n  }\n    \n    render() {\n        return (\n            <div className=\"table-responsive bordered-table mb-60\">\n                <div className=\"table-header\">\n                    <div className=\"h6\">Table Header</div>\n                    <div className=\"button\">\n                        <div className=\"sort-icon\">\n                            \n                        </div>\n                        <div className=\"dots-icon\">\n\n                        </div>\n                    </div>\n                </div>\n                <table className=\"table-striped\">\n                    <thead>\n                        <tr>\n                            <th style={{width:\"20px\"}}>\n                    <div className=\"custom-checkbox\">\n                      <CheckBox />\n                                    {/* <input type=\"checkbox\" id=\"all\" onChange={this.handleInputChange}/>\n                                    <label for=\"all\"></label>       */}\n                                </div>\n                            </th>\n                            {tableHead.map(data => (\n                                <th key={data} className=\"text-gray text-left\">{data}</th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>    \n                        {this.state.tableData.map((data, i) => {\n                            return  <tr key={data.id}>\n                              <td key={data}>\n                                <CheckBoxList options={this.state.checkList} isCheckedAll={this.state.isCheckedAll} onCheck={this.onCheckBoxChange.bind(this)} />\n                                            {/* <div className=\"custom-checkbox\">\n                                                <input type=\"checkbox\" id={data.id} onChange={this.handleInputChange}/>\n                                                <label for={data.id}></label>      \n                                            </div> */}\n                                        </td>\n                                        <td>{data.userName}</td>\n                                        <td>{data.emailId}</td>\n                                        <td>{data.status}</td>\n                                        <td>{data.Revenue}</td>\n                                        <td>{data.comment}</td>\n                                    </tr>\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default tableStriped;\n"]},"metadata":{},"sourceType":"module"}